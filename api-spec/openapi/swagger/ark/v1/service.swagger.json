{
  "swagger": "2.0",
  "info": {
    "title": "ark/v1/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ArkService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/boarding": {
      "post": {
        "operationId": "ArkService_GetBoardingAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBoardingAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetBoardingAddressRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/events": {
      "get": {
        "operationId": "ArkService_GetEventStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetEventStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1GetEventStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/info": {
      "get": {
        "operationId": "ArkService_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/offchain-tx/finalize": {
      "post": {
        "operationId": "ArkService_FinalizeOffchainTx",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FinalizeOffchainTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FinalizeOffchainTxRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/offchain-tx/submit": {
      "post": {
        "operationId": "ArkService_SubmitOffchainTx",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SubmitOffchainTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubmitOffchainTxRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/round/ping/{requestId}": {
      "get": {
        "operationId": "ArkService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "requestId",
            "description": "The id used to register inputs and ouptuts.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/round/registerInputs": {
      "post": {
        "operationId": "ArkService_RegisterInputsForNextRound",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterInputsForNextRoundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterInputsForNextRoundRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/round/registerIntent": {
      "post": {
        "operationId": "ArkService_RegisterIntent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterIntentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterIntentRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/round/registerOutputs": {
      "post": {
        "operationId": "ArkService_RegisterOutputsForNextRound",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterOutputsForNextRoundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterOutputsForNextRoundRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/round/submitForfeitTxs": {
      "post": {
        "operationId": "ArkService_SubmitSignedForfeitTxs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SubmitSignedForfeitTxsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubmitSignedForfeitTxsRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/round/tree/submitNonces": {
      "post": {
        "operationId": "ArkService_SubmitTreeNonces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SubmitTreeNoncesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubmitTreeNoncesRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/round/tree/submitSignatures": {
      "post": {
        "operationId": "ArkService_SubmitTreeSignatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SubmitTreeSignaturesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubmitTreeSignaturesRequest"
            }
          }
        ],
        "tags": [
          "ArkService"
        ]
      }
    },
    "/v1/transactions": {
      "get": {
        "operationId": "ArkService_GetTransactionsStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetTransactionsStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1GetTransactionsStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ArkService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Bip322Signature": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1FinalizeOffchainTxRequest": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "checkpointTxs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1FinalizeOffchainTxResponse": {
      "type": "object"
    },
    "v1GetBoardingAddressRequest": {
      "type": "object",
      "properties": {
        "pubkey": {
          "type": "string"
        }
      }
    },
    "v1GetBoardingAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "taprootTree": {
          "$ref": "#/definitions/v1Tapscripts"
        }
      }
    },
    "v1GetEventStreamResponse": {
      "type": "object",
      "properties": {
        "roundFinalization": {
          "$ref": "#/definitions/v1RoundFinalizationEvent"
        },
        "roundFinalized": {
          "$ref": "#/definitions/v1RoundFinalizedEvent"
        },
        "roundFailed": {
          "$ref": "#/definitions/v1RoundFailed"
        },
        "roundSigning": {
          "$ref": "#/definitions/v1RoundSigningEvent"
        },
        "roundSigningNoncesGenerated": {
          "$ref": "#/definitions/v1RoundSigningNoncesGeneratedEvent"
        }
      }
    },
    "v1GetInfoResponse": {
      "type": "object",
      "properties": {
        "pubkey": {
          "type": "string"
        },
        "vtxoTreeExpiry": {
          "type": "string",
          "format": "int64"
        },
        "unilateralExitDelay": {
          "type": "string",
          "format": "int64"
        },
        "roundInterval": {
          "type": "string",
          "format": "int64"
        },
        "network": {
          "type": "string"
        },
        "dust": {
          "type": "string",
          "format": "int64"
        },
        "forfeitAddress": {
          "type": "string"
        },
        "marketHour": {
          "$ref": "#/definitions/v1MarketHour"
        },
        "version": {
          "type": "string"
        },
        "utxoMinAmount": {
          "type": "string",
          "format": "int64",
          "title": "-1 means native dust limit (default)"
        },
        "utxoMaxAmount": {
          "type": "string",
          "format": "int64",
          "title": "-1 means no limit (default), 0 means boarding not allowed"
        },
        "vtxoMinAmount": {
          "type": "string",
          "format": "int64",
          "title": "-1 means native dust limit (default)"
        },
        "vtxoMaxAmount": {
          "type": "string",
          "format": "int64",
          "title": "-1 means no limit (default)"
        },
        "boardingExitDelay": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetTransactionsStreamResponse": {
      "type": "object",
      "properties": {
        "round": {
          "$ref": "#/definitions/v1RoundTransaction"
        },
        "redeem": {
          "$ref": "#/definitions/v1RedeemTransaction"
        }
      }
    },
    "v1Input": {
      "type": "object",
      "properties": {
        "outpoint": {
          "$ref": "#/definitions/v1Outpoint"
        },
        "taprootTree": {
          "$ref": "#/definitions/v1Tapscripts"
        }
      }
    },
    "v1MarketHour": {
      "type": "object",
      "properties": {
        "nextStartTime": {
          "type": "string",
          "format": "int64"
        },
        "nextEndTime": {
          "type": "string",
          "format": "int64"
        },
        "period": {
          "type": "string",
          "format": "int64"
        },
        "roundInterval": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Musig2": {
      "type": "object",
      "properties": {
        "cosignersPublicKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signingAll": {
          "type": "boolean"
        }
      }
    },
    "v1Node": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "tx": {
          "type": "string"
        },
        "parentTxid": {
          "type": "string"
        }
      }
    },
    "v1Outpoint": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "vout": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1Output": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "onchain or off-chain"
        },
        "amount": {
          "type": "string",
          "format": "uint64",
          "description": "Amount to send in satoshis."
        }
      }
    },
    "v1PingResponse": {
      "type": "object"
    },
    "v1RedeemTransaction": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "spentVtxos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vtxo"
          }
        },
        "spendableVtxos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vtxo"
          }
        },
        "hex": {
          "type": "string"
        }
      }
    },
    "v1RegisterInputsForNextRoundRequest": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Input"
          }
        }
      }
    },
    "v1RegisterInputsForNextRoundResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        }
      }
    },
    "v1RegisterIntentRequest": {
      "type": "object",
      "properties": {
        "bip322Signature": {
          "$ref": "#/definitions/v1Bip322Signature",
          "title": "BIP322 signature embeds the outpoints and the proof of funds"
        }
      }
    },
    "v1RegisterIntentResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        }
      }
    },
    "v1RegisterOutputsForNextRoundRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Output"
          },
          "description": "List of receivers for to convert to leaves in the next VTXO tree."
        },
        "musig2": {
          "$ref": "#/definitions/v1Musig2"
        }
      }
    },
    "v1RegisterOutputsForNextRoundResponse": {
      "type": "object"
    },
    "v1RoundFailed": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "v1RoundFinalizationEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "roundTx": {
          "type": "string"
        },
        "vtxoTree": {
          "$ref": "#/definitions/v1Tree"
        },
        "connectors": {
          "$ref": "#/definitions/v1Tree"
        },
        "minRelayFeeRate": {
          "type": "string",
          "format": "int64"
        },
        "connectorsIndex": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Outpoint"
          },
          "title": "vtxo outpoint encoded as string -\u003e connector outpoint"
        }
      }
    },
    "v1RoundFinalizedEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "roundTxid": {
          "type": "string"
        }
      }
    },
    "v1RoundSigningEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cosignersPubkeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unsignedVtxoTree": {
          "$ref": "#/definitions/v1Tree"
        },
        "unsignedRoundTx": {
          "type": "string"
        }
      }
    },
    "v1RoundSigningNoncesGeneratedEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "treeNonces": {
          "type": "string"
        }
      }
    },
    "v1RoundTransaction": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "spentVtxos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vtxo"
          }
        },
        "spendableVtxos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vtxo"
          }
        },
        "claimedBoardingUtxos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Outpoint"
          }
        },
        "hex": {
          "type": "string"
        }
      }
    },
    "v1SubmitOffchainTxRequest": {
      "type": "object",
      "properties": {
        "virtualTx": {
          "type": "string"
        },
        "checkpointTxs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SubmitOffchainTxResponse": {
      "type": "object",
      "properties": {
        "signedVirtualTx": {
          "type": "string"
        },
        "txid": {
          "type": "string"
        },
        "signedCheckpointTxs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SubmitSignedForfeitTxsRequest": {
      "type": "object",
      "properties": {
        "signedForfeitTxs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Forfeit txs signed by the user."
        },
        "signedRoundTx": {
          "type": "string",
          "description": "The user has to sign also the round tx if he registerd a boarding UTXO."
        }
      }
    },
    "v1SubmitSignedForfeitTxsResponse": {
      "type": "object"
    },
    "v1SubmitTreeNoncesRequest": {
      "type": "object",
      "properties": {
        "roundId": {
          "type": "string"
        },
        "pubkey": {
          "type": "string"
        },
        "treeNonces": {
          "type": "string"
        }
      }
    },
    "v1SubmitTreeNoncesResponse": {
      "type": "object"
    },
    "v1SubmitTreeSignaturesRequest": {
      "type": "object",
      "properties": {
        "roundId": {
          "type": "string"
        },
        "pubkey": {
          "type": "string"
        },
        "treeSignatures": {
          "type": "string"
        }
      }
    },
    "v1SubmitTreeSignaturesResponse": {
      "type": "object"
    },
    "v1Tapscripts": {
      "type": "object",
      "properties": {
        "scripts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Tree": {
      "type": "object",
      "properties": {
        "levels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TreeLevel"
          }
        }
      }
    },
    "v1TreeLevel": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Node"
          }
        }
      }
    },
    "v1Vtxo": {
      "type": "object",
      "properties": {
        "outpoint": {
          "$ref": "#/definitions/v1Outpoint"
        },
        "spent": {
          "type": "boolean"
        },
        "roundTxid": {
          "type": "string"
        },
        "spentBy": {
          "type": "string"
        },
        "expireAt": {
          "type": "string",
          "format": "int64"
        },
        "swept": {
          "type": "boolean"
        },
        "isPending": {
          "type": "boolean"
        },
        "redeemTx": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "pubkey": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        }
      }
    }
  }
}
