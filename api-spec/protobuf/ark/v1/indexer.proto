syntax = "proto3";

package ark.v1;

import "google/api/annotations.proto";

service IndexerService {
  rpc GetCommitmentTx(GetCommitmentTxRequest) returns (GetCommitmentTxResponse) {
    option (google.api.http) = {
      get: "/v1/commitmentTx/{txid}"
    };
  };
  rpc GetForfeitTxs(GetForfeitTxsRequest) returns (GetForfeitTxsResponse) {
    option (google.api.http) = {
      get: "/v1/commitmentTx/{txid}/forfeitTxs"
    };
  };
  rpc GetConnectors(GetConnectorsRequest) returns (GetConnectorsResponse) {
    option (google.api.http) = {
      get: "/v1/commitmentTx/{txid}/connectors"
    };
  };
  rpc GetCommitmentTxLeaves(GetCommitmentTxLeavesRequest) returns (GetCommitmentTxLeavesResponse) {
    option (google.api.http) = {
      get: "/v1/commitmentTx/{txid}/leaves"
    };
  };
  rpc GetVtxoTree(GetVtxoTreeRequest) returns (GetVtxoTreeResponse) {
    option (google.api.http) = {
      get: "/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree"
    };
  };
  rpc GetVtxoTreeLeaves(GetVtxoTreeLeavesRequest) returns (GetVtxoTreeLeavesResponse) {
    option (google.api.http) = {
      get: "/v1/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree/leaves"
    };
  };
  rpc GetVtxos(GetVtxosRequest) returns (GetVtxosResponse) {
    option (google.api.http) = {
      get: "/v1/getVtxos/{address}"
    };
  };
  rpc GetTransactionHistory(GetTransactionHistoryRequest) returns (GetTransactionHistoryResponse) {
    option (google.api.http) = {
      get: "/v1/history/{address}"
    };
  };
  rpc GetVtxoChain(GetVtxoChainRequest) returns (GetVtxoChainResponse) {
    option (google.api.http) = {
      get: "/v1/vtxo/{outpoint.txid}/{outpoint.vout}/chain"
    };
  }
  rpc GetVirtualTxs(GetVirtualTxsRequest) returns (GetVirtualTxsResponse) {
    option (google.api.http) = {
      get: "/v1/virtualTx/{txids}"
    };
  }
  rpc GetSweptCommitmentTx(GetSweptCommitmentTxRequest) returns (GetSweptCommitmentTxResponse) {
    option (google.api.http) = {
      get: "/v1/commitmentTx/{txid}/swept"
    };
  }
}

message GetCommitmentTxRequest {
  string txid = 1;
}
message GetCommitmentTxResponse {
  int64 started_at = 1;
  int64 ended_at = 2;
  map<uint32, IndexerBatch> batches = 3;
  uint64 total_input_amount = 4;
  int32 total_input_vtxos = 5;
  uint64 total_output_amount = 6;
  int32 total_output_vtxos = 7;
}

message GetForfeitTxsRequest {
  string txid = 1;
  IndexerPageRequest page = 2;
}
message GetForfeitTxsResponse {
  repeated string txids = 1;
  IndexerPageResponse page = 2;
}

message GetConnectorsRequest {
  string txid = 1;
  IndexerPageRequest page = 2;
}
message GetConnectorsResponse {
  repeated IndexerNode connectors = 1;
  IndexerPageResponse page = 2;
}

message GetCommitmentTxLeavesRequest {
  string txid = 1;
  IndexerPageRequest page = 2;
}
message GetCommitmentTxLeavesResponse {
  repeated IndexerOutpoint leaves = 1;
  IndexerPageResponse page = 2;
}

message GetVtxoTreeRequest {
  IndexerOutpoint batch_outpoint = 1;
  IndexerPageRequest page = 2;
}
message GetVtxoTreeResponse {
  repeated IndexerNode vtxo_tree = 1;
  IndexerPageResponse page = 2;
}

message GetVtxoTreeLeavesRequest {
  IndexerOutpoint batch_outpoint = 1;
  IndexerPageRequest page = 2;
}
message GetVtxoTreeLeavesResponse {
  repeated IndexerOutpoint leaves = 1;
  IndexerPageResponse page = 2;
}

message GetVtxosRequest {
  string address = 1;
  bool spendable_only = 2;
  bool spent_only = 3;
  IndexerPageRequest page = 4;
}
message GetVtxosResponse {
  repeated IndexerVtxo vtxos = 1;
  IndexerPageResponse page = 2;
}

message GetTransactionHistoryRequest {
  string address = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  IndexerPageRequest page = 4;
}
message GetTransactionHistoryResponse {
  repeated IndexerTxHistoryRecord history = 1;
  IndexerPageResponse page = 2;
}

message GetVtxoChainRequest {
  IndexerOutpoint outpoint = 1;
  IndexerPageRequest page = 2;
}
message GetVtxoChainResponse {
  repeated IndexerChain chain = 1;
  int32 depth = 2;
  string root_commitment_txid = 3;
  IndexerPageResponse page = 4;
}

message GetVirtualTxsRequest {
  repeated string txids = 1;
  IndexerPageRequest page = 2;
}
message GetVirtualTxsResponse {
  repeated string txs = 1;
  IndexerPageResponse page = 2;
}

message GetSweptCommitmentTxRequest {
  string txid = 1;
}
message GetSweptCommitmentTxResponse {
  repeated string swept_by = 1;
}

message SubscribeForAddressesRequest {
  repeated string addresses = 1;
}
message SubscribeForAddressesResponse {
  string address = 1;
  repeated IndexerVtxo new_vtxos = 2;
  repeated IndexerVtxo spent_vtxos = 3;
}

message IndexerBatch {
  uint64 total_output_amount = 1;
  int32 total_output_vtxos = 2;
  int64 expires_at = 3;
  bool swept = 4;
}

message IndexerOutpoint {
  string txid = 1;
  uint32 vout = 2;
}

message IndexerNode {
  string txid = 1;
  string parent_txid = 3;
  int32 level = 4;
  int32 level_index = 5;
}

message IndexerVtxo {
  IndexerOutpoint outpoint = 1;
  int64 created_at = 2;
  int64 expires_at = 3;
  uint64 amount = 4;
  string script = 5;
  bool is_leaf = 6;
  bool is_swept = 7;
  bool is_spent = 8;
  string spent_by = 9;
  string commitment_txid = 10;
}

message IndexerChain {
  string txid = 1;
  repeated IndexerChainedTx spends = 2;
  int64 expires_at = 3;
}

message IndexerChainedTx {
  string txid = 1;
  IndexerChainedTxType type = 2;
}

message IndexerTxHistoryRecord {
  oneof key {
    string commitment_txid = 1;
    string virtual_txid = 2;
  }
  IndexerTxType type = 3;
  uint64 amount = 4;
  int64 created_at = 5;
  bool is_settled = 6;
  string settled_by = 7;
}

enum IndexerTxType {
  INDEXER_TX_TYPE_UNSPECIFIED = 0;
  INDEXER_TX_TYPE_RECEIVED = 1;
  INDEXER_TX_TYPE_SENT = 2;
}

enum IndexerChainedTxType {
  INDEXER_CHAINED_TX_TYPE_UNSPECIFIED = 0;
  INDEXER_CHAINED_TX_TYPE_VIRTUAL = 1;
  INDEXER_CHAINED_TX_TYPE_COMMITMENT = 2;
}

message IndexerPageRequest {
  int32 size = 1;
  int32 index = 2;
}

message IndexerPageResponse {
  int32 current = 1;
  int32 next = 2;
  int32 total = 3;
}