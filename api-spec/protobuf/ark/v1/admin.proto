syntax = "proto3";

package ark.v1;

import "google/api/annotations.proto";
import "ark/v1/types.proto";

service AdminService {
  rpc GetScheduledSweep(GetScheduledSweepRequest) returns (GetScheduledSweepResponse) {
    option (google.api.http) = {
      get: "/v1/admin/sweeps"
    };
  }
  rpc GetBatch(GetBatchRequest) returns (GetBatchResponse) {
    option (google.api.http) = {
      get: "/v1/admin/batch/{batch_id}"
    };
  }
  rpc GetBatches(GetBatchesRequest) returns (GetBatchesResponse) {
    option (google.api.http) = {
      post: "/v1/admin/batches"
      body: "*"
    };
  } 
  rpc CreateNote(CreateNoteRequest) returns (CreateNoteResponse) {
    option (google.api.http) = {
      post: "/v1/admin/note"
      body: "*"
    };
  }
  rpc GetMarketHour(GetMarketHourRequest) returns (GetMarketHourResponse) {
    option (google.api.http) = {
      get: "/v1/admin/marketHour"
    };
  }
  rpc UpdateMarketHour(UpdateMarketHourRequest) returns (UpdateMarketHourResponse) {
    option (google.api.http) = {
      post: "/v1/admin/marketHour"
      body: "*"
    };
  }
  rpc GetTxRequestQueue(GetTxRequestQueueRequest) returns (GetTxRequestQueueResponse) {
    option (google.api.http) = {
      get: "/v1/admin/queue"
    };
  }
  rpc DeleteTxRequests(DeleteTxRequestsRequest) returns (DeleteTxRequestsResponse) {
    option (google.api.http) = {
      post: "/v1/admin/queue/delete"
      body: "*"
    };
  }
}

message GetScheduledSweepRequest {}
message GetScheduledSweepResponse {
  repeated ScheduledSweep sweeps = 1;
}

message GetBatchRequest {
  string batch_id = 1;
}
message GetBatchResponse {
  oneof batch {
    BatchCompleted success = 1;
    BatchFailed failure = 2;
  }
}

message GetBatchesRequest {
  int64 after = 1;
  int64 before = 2;
}
message GetBatchesResponse {
  repeated string batch_ids = 1;
}

message CreateNoteRequest {
  uint32 amount = 1;
  uint32 quantity = 2;
}
message CreateNoteResponse {
  repeated string notes = 1;
}

message GetMarketHourRequest {}
message GetMarketHourResponse {
    MarketHourConfig market_hour_config = 1;
}

message UpdateMarketHourRequest {
    MarketHourConfig market_hour_config = 1;
}
message UpdateMarketHourResponse {}

message GetTxRequestQueueRequest {
  repeated string request_ids = 1;
}
message GetTxRequestQueueResponse {
  repeated TxRequestInfo requests = 1;
}

message DeleteTxRequestsRequest {
  repeated string request_ids = 1;
}
message DeleteTxRequestsResponse {}