syntax = "proto3";

package ark.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "ark/v1/types.proto";

service AdminService {
  rpc GetScheduledSweep(GetScheduledSweepRequest) returns (GetScheduledSweepResponse) {
    option (google.api.http) = {
      get: "/v1/admin/sweeps"
    };
  }
  rpc GetRoundDetails(GetRoundDetailsRequest) returns (GetRoundDetailsResponse) {
    option (google.api.http) = {
      get: "/v1/admin/round/{round_id}"
    };
  }
  rpc GetRounds(GetRoundsRequest) returns (GetRoundsResponse) {
    option (google.api.http) = {
      post: "/v1/admin/rounds"
      body: "*"
    };
  } 
  rpc CreateNote(CreateNoteRequest) returns (CreateNoteResponse) {
    option (google.api.http) = {
      post: "/v1/admin/note"
      body: "*"
    };
  }
  rpc GetMarketHourConfig(GetMarketHourConfigRequest) returns (GetMarketHourConfigResponse) {
    option (google.api.http) = {
      get: "/v1/admin/market-hour"
    };
  }
  rpc UpdateMarketHourConfig(UpdateMarketHourConfigRequest) returns (UpdateMarketHourConfigResponse) {
    option (google.api.http) = {
      post: "/v1/admin/market-hour"
      body: "*"
    };
  }
  rpc GetTxRequestQueue(GetTxRequestQueueRequest) returns (GetTxRequestQueueResponse) {
    option (google.api.http) = {
      get: "/v1/admin/queue"
    };
  }
  rpc DeleteTxRequests(DeleteTxRequestsRequest) returns (DeleteTxRequestsResponse) {
    option (google.api.http) = {
      post: "/v1/admin/queue/delete"
      body: "*"
    };
  }
  rpc Withdraw(WithdrawRequest) returns (WithdrawResponse) {
    option (google.api.http) = {
      post: "/v1/admin/withdraw"
      body: "*"
    };
  }
}

message GetScheduledSweepRequest {}
message GetScheduledSweepResponse {
  repeated ScheduledSweep sweeps = 1;
}

message GetRoundDetailsRequest {
  string round_id = 1;
}
message GetRoundDetailsResponse {
  string round_id = 1;
  string txid = 2;
  string forfeited_amount = 3;
  string total_vtxos_amount = 4;
  string total_exit_amount = 5;
  string fees_amount = 6;
  repeated string inputs_vtxos = 7;
  repeated string outputs_vtxos = 8;
  repeated string exit_addresses = 9;
}

message GetRoundsRequest {
  int64 after = 1;
  int64 before = 2;
}
message GetRoundsResponse {
  repeated string rounds = 1;
}

message CreateNoteRequest {
  uint32 amount = 1;
  uint32 quantity = 2;
}
message CreateNoteResponse {
  repeated string notes = 1;
}

message GetMarketHourConfigRequest {}
message GetMarketHourConfigResponse {
    MarketHourConfig config = 1;
}

message UpdateMarketHourConfigRequest {
    MarketHourConfig config = 1;
}
message UpdateMarketHourConfigResponse {}

message MarketHourConfig {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  google.protobuf.Duration period = 3;
  google.protobuf.Duration round_interval = 4;
}

message GetTxRequestQueueRequest {
  repeated string request_ids = 1;
}
message GetTxRequestQueueResponse {
  repeated TxRequestInfo requests = 1;
}

message DeleteTxRequestsRequest {
  repeated string request_ids = 1;
}
message DeleteTxRequestsResponse {}
message WithdrawRequest {
  string address = 1;
  uint64 amount = 2;
}

message WithdrawResponse {
  string txid = 1;
}
