// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: ark/v1/new_types.proto

package arkv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxType int32

const (
	TxType_TX_TYPE_UNSPECIFIED TxType = 0
	TxType_TX_TYPE_RECEIVED    TxType = 1
	TxType_TX_TYPE_SENT        TxType = 2
	TxType_TX_TYPE_SWEEP       TxType = 3
)

// Enum value maps for TxType.
var (
	TxType_name = map[int32]string{
		0: "TX_TYPE_UNSPECIFIED",
		1: "TX_TYPE_RECEIVED",
		2: "TX_TYPE_SENT",
		3: "TX_TYPE_SWEEP",
	}
	TxType_value = map[string]int32{
		"TX_TYPE_UNSPECIFIED": 0,
		"TX_TYPE_RECEIVED":    1,
		"TX_TYPE_SENT":        2,
		"TX_TYPE_SWEEP":       3,
	}
)

func (x TxType) Enum() *TxType {
	p := new(TxType)
	*p = x
	return p
}

func (x TxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxType) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_new_types_proto_enumTypes[0].Descriptor()
}

func (TxType) Type() protoreflect.EnumType {
	return &file_ark_v1_new_types_proto_enumTypes[0]
}

func (x TxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxType.Descriptor instead.
func (TxType) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{0}
}

type Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBatchAmount   uint64 `protobuf:"varint,1,opt,name=total_batch_amount,json=totalBatchAmount,proto3" json:"total_batch_amount,omitempty"`
	TotalForfeitAmount uint64 `protobuf:"varint,2,opt,name=total_forfeit_amount,json=totalForfeitAmount,proto3" json:"total_forfeit_amount,omitempty"`
	TotalInputVtxos    int32  `protobuf:"varint,3,opt,name=total_input_vtxos,json=totalInputVtxos,proto3" json:"total_input_vtxos,omitempty"`
	TotalOutputVtxos   int32  `protobuf:"varint,4,opt,name=total_output_vtxos,json=totalOutputVtxos,proto3" json:"total_output_vtxos,omitempty"`
	ExpiresAt          int64  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Swept              bool   `protobuf:"varint,6,opt,name=swept,proto3" json:"swept,omitempty"`
}

func (x *Batch) Reset() {
	*x = Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{0}
}

func (x *Batch) GetTotalBatchAmount() uint64 {
	if x != nil {
		return x.TotalBatchAmount
	}
	return 0
}

func (x *Batch) GetTotalForfeitAmount() uint64 {
	if x != nil {
		return x.TotalForfeitAmount
	}
	return 0
}

func (x *Batch) GetTotalInputVtxos() int32 {
	if x != nil {
		return x.TotalInputVtxos
	}
	return 0
}

func (x *Batch) GetTotalOutputVtxos() int32 {
	if x != nil {
		return x.TotalOutputVtxos
	}
	return 0
}

func (x *Batch) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *Batch) GetSwept() bool {
	if x != nil {
		return x.Swept
	}
	return false
}

type NewOutpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
}

func (x *NewOutpoint) Reset() {
	*x = NewOutpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOutpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOutpoint) ProtoMessage() {}

func (x *NewOutpoint) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOutpoint.ProtoReflect.Descriptor instead.
func (*NewOutpoint) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{1}
}

func (x *NewOutpoint) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *NewOutpoint) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

type NodeNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid       string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Tx         string `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	ParentTxid string `protobuf:"bytes,3,opt,name=parent_txid,json=parentTxid,proto3" json:"parent_txid,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	LevelIndex int32  `protobuf:"varint,5,opt,name=level_index,json=levelIndex,proto3" json:"level_index,omitempty"`
}

func (x *NodeNew) Reset() {
	*x = NodeNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeNew) ProtoMessage() {}

func (x *NodeNew) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeNew.ProtoReflect.Descriptor instead.
func (*NodeNew) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{2}
}

func (x *NodeNew) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *NodeNew) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *NodeNew) GetParentTxid() string {
	if x != nil {
		return x.ParentTxid
	}
	return ""
}

func (x *NodeNew) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NodeNew) GetLevelIndex() int32 {
	if x != nil {
		return x.LevelIndex
	}
	return 0
}

type NewVtxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint  *NewOutpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	CreatedAt int64        `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt int64        `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Amount    uint64       `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Script    string       `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	IsLeaf    bool         `protobuf:"varint,6,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	IsSwept   bool         `protobuf:"varint,7,opt,name=is_swept,json=isSwept,proto3" json:"is_swept,omitempty"`
	IsSpent   bool         `protobuf:"varint,8,opt,name=is_spent,json=isSpent,proto3" json:"is_spent,omitempty"`
	SpentBy   string       `protobuf:"bytes,9,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
}

func (x *NewVtxo) Reset() {
	*x = NewVtxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewVtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewVtxo) ProtoMessage() {}

func (x *NewVtxo) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewVtxo.ProtoReflect.Descriptor instead.
func (*NewVtxo) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{3}
}

func (x *NewVtxo) GetOutpoint() *NewOutpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *NewVtxo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NewVtxo) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *NewVtxo) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *NewVtxo) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *NewVtxo) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *NewVtxo) GetIsSwept() bool {
	if x != nil {
		return x.IsSwept
	}
	return false
}

func (x *NewVtxo) GetIsSpent() bool {
	if x != nil {
		return x.IsSpent
	}
	return false
}

func (x *NewVtxo) GetSpentBy() string {
	if x != nil {
		return x.SpentBy
	}
	return ""
}

type Bip322Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Bip322Signature) Reset() {
	*x = Bip322Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bip322Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bip322Signature) ProtoMessage() {}

func (x *Bip322Signature) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bip322Signature.ProtoReflect.Descriptor instead.
func (*Bip322Signature) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{4}
}

func (x *Bip322Signature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Bip322Signature) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TxHistoryRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//
	//	*TxHistoryRecord_BoardingTxid
	//	*TxHistoryRecord_CommitmentTxid
	//	*TxHistoryRecord_SweepTxid
	//	*TxHistoryRecord_ArkTxid
	Key         isTxHistoryRecord_Key `protobuf_oneof:"key"`
	Type        TxType                `protobuf:"varint,5,opt,name=type,proto3,enum=ark.v1.TxType" json:"type,omitempty"`
	Amount      uint64                `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt   int64                 `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ConfirmedAt int64                 `protobuf:"varint,8,opt,name=confirmed_at,json=confirmedAt,proto3" json:"confirmed_at,omitempty"`
	IsSettled   bool                  `protobuf:"varint,9,opt,name=is_settled,json=isSettled,proto3" json:"is_settled,omitempty"`
}

func (x *TxHistoryRecord) Reset() {
	*x = TxHistoryRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxHistoryRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHistoryRecord) ProtoMessage() {}

func (x *TxHistoryRecord) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHistoryRecord.ProtoReflect.Descriptor instead.
func (*TxHistoryRecord) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{5}
}

func (m *TxHistoryRecord) GetKey() isTxHistoryRecord_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *TxHistoryRecord) GetBoardingTxid() string {
	if x, ok := x.GetKey().(*TxHistoryRecord_BoardingTxid); ok {
		return x.BoardingTxid
	}
	return ""
}

func (x *TxHistoryRecord) GetCommitmentTxid() string {
	if x, ok := x.GetKey().(*TxHistoryRecord_CommitmentTxid); ok {
		return x.CommitmentTxid
	}
	return ""
}

func (x *TxHistoryRecord) GetSweepTxid() string {
	if x, ok := x.GetKey().(*TxHistoryRecord_SweepTxid); ok {
		return x.SweepTxid
	}
	return ""
}

func (x *TxHistoryRecord) GetArkTxid() string {
	if x, ok := x.GetKey().(*TxHistoryRecord_ArkTxid); ok {
		return x.ArkTxid
	}
	return ""
}

func (x *TxHistoryRecord) GetType() TxType {
	if x != nil {
		return x.Type
	}
	return TxType_TX_TYPE_UNSPECIFIED
}

func (x *TxHistoryRecord) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TxHistoryRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TxHistoryRecord) GetConfirmedAt() int64 {
	if x != nil {
		return x.ConfirmedAt
	}
	return 0
}

func (x *TxHistoryRecord) GetIsSettled() bool {
	if x != nil {
		return x.IsSettled
	}
	return false
}

type isTxHistoryRecord_Key interface {
	isTxHistoryRecord_Key()
}

type TxHistoryRecord_BoardingTxid struct {
	BoardingTxid string `protobuf:"bytes,1,opt,name=boarding_txid,json=boardingTxid,proto3,oneof"`
}

type TxHistoryRecord_CommitmentTxid struct {
	CommitmentTxid string `protobuf:"bytes,2,opt,name=commitment_txid,json=commitmentTxid,proto3,oneof"`
}

type TxHistoryRecord_SweepTxid struct {
	SweepTxid string `protobuf:"bytes,3,opt,name=sweep_txid,json=sweepTxid,proto3,oneof"`
}

type TxHistoryRecord_ArkTxid struct {
	ArkTxid string `protobuf:"bytes,4,opt,name=ark_txid,json=arkTxid,proto3,oneof"`
}

func (*TxHistoryRecord_BoardingTxid) isTxHistoryRecord_Key() {}

func (*TxHistoryRecord_CommitmentTxid) isTxHistoryRecord_Key() {}

func (*TxHistoryRecord_SweepTxid) isTxHistoryRecord_Key() {}

func (*TxHistoryRecord_ArkTxid) isTxHistoryRecord_Key() {}

type PageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size  int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Index int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{6}
}

func (x *PageRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type PageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Next    int32 `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	Total   int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PageResponse) Reset() {
	*x = PageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageResponse) ProtoMessage() {}

func (x *PageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageResponse.ProtoReflect.Descriptor instead.
func (*PageResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{7}
}

func (x *PageResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageResponse) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *PageResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type BatchStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IntentIds      []string `protobuf:"bytes,2,rep,name=intent_ids,json=intentIds,proto3" json:"intent_ids,omitempty"`
	BatchExpiry    int64    `protobuf:"varint,3,opt,name=batch_expiry,json=batchExpiry,proto3" json:"batch_expiry,omitempty"`
	ForfeitAddress string   `protobuf:"bytes,4,opt,name=forfeit_address,json=forfeitAddress,proto3" json:"forfeit_address,omitempty"`
}

func (x *BatchStartedEvent) Reset() {
	*x = BatchStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchStartedEvent) ProtoMessage() {}

func (x *BatchStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchStartedEvent.ProtoReflect.Descriptor instead.
func (*BatchStartedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{8}
}

func (x *BatchStartedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchStartedEvent) GetIntentIds() []string {
	if x != nil {
		return x.IntentIds
	}
	return nil
}

func (x *BatchStartedEvent) GetBatchExpiry() int64 {
	if x != nil {
		return x.BatchExpiry
	}
	return 0
}

func (x *BatchStartedEvent) GetForfeitAddress() string {
	if x != nil {
		return x.ForfeitAddress
	}
	return ""
}

type BatchVtxoTreeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic  []string `protobuf:"bytes,2,rep,name=topic,proto3" json:"topic,omitempty"`
	TreeTx *NodeNew `protobuf:"bytes,3,opt,name=tree_tx,json=treeTx,proto3" json:"tree_tx,omitempty"`
}

func (x *BatchVtxoTreeEvent) Reset() {
	*x = BatchVtxoTreeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchVtxoTreeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchVtxoTreeEvent) ProtoMessage() {}

func (x *BatchVtxoTreeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchVtxoTreeEvent.ProtoReflect.Descriptor instead.
func (*BatchVtxoTreeEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{9}
}

func (x *BatchVtxoTreeEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchVtxoTreeEvent) GetTopic() []string {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *BatchVtxoTreeEvent) GetTreeTx() *NodeNew {
	if x != nil {
		return x.TreeTx
	}
	return nil
}

type BatchConnectorTreeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic       []string `protobuf:"bytes,2,rep,name=topic,proto3" json:"topic,omitempty"`
	ConnectorTx *NodeNew `protobuf:"bytes,3,opt,name=connector_tx,json=connectorTx,proto3" json:"connector_tx,omitempty"`
}

func (x *BatchConnectorTreeEvent) Reset() {
	*x = BatchConnectorTreeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchConnectorTreeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConnectorTreeEvent) ProtoMessage() {}

func (x *BatchConnectorTreeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConnectorTreeEvent.ProtoReflect.Descriptor instead.
func (*BatchConnectorTreeEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{10}
}

func (x *BatchConnectorTreeEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchConnectorTreeEvent) GetTopic() []string {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *BatchConnectorTreeEvent) GetConnectorTx() *NodeNew {
	if x != nil {
		return x.ConnectorTx
	}
	return nil
}

type BatchFinalizationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CommitmentTx   string `protobuf:"bytes,2,opt,name=commitment_tx,json=commitmentTx,proto3" json:"commitment_tx,omitempty"`
	ForfeitAddress string `protobuf:"bytes,3,opt,name=forfeit_address,json=forfeitAddress,proto3" json:"forfeit_address,omitempty"`
}

func (x *BatchFinalizationEvent) Reset() {
	*x = BatchFinalizationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchFinalizationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchFinalizationEvent) ProtoMessage() {}

func (x *BatchFinalizationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchFinalizationEvent.ProtoReflect.Descriptor instead.
func (*BatchFinalizationEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{11}
}

func (x *BatchFinalizationEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchFinalizationEvent) GetCommitmentTx() string {
	if x != nil {
		return x.CommitmentTx
	}
	return ""
}

func (x *BatchFinalizationEvent) GetForfeitAddress() string {
	if x != nil {
		return x.ForfeitAddress
	}
	return ""
}

type BatchFinalizedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CommitmentTxid string `protobuf:"bytes,2,opt,name=commitment_txid,json=commitmentTxid,proto3" json:"commitment_txid,omitempty"`
}

func (x *BatchFinalizedEvent) Reset() {
	*x = BatchFinalizedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchFinalizedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchFinalizedEvent) ProtoMessage() {}

func (x *BatchFinalizedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchFinalizedEvent.ProtoReflect.Descriptor instead.
func (*BatchFinalizedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{12}
}

func (x *BatchFinalizedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchFinalizedEvent) GetCommitmentTxid() string {
	if x != nil {
		return x.CommitmentTxid
	}
	return ""
}

type BatchFailedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *BatchFailedEvent) Reset() {
	*x = BatchFailedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchFailedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchFailedEvent) ProtoMessage() {}

func (x *BatchFailedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchFailedEvent.ProtoReflect.Descriptor instead.
func (*BatchFailedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{13}
}

func (x *BatchFailedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchFailedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TreeSigningStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SignerPubkey         string   `protobuf:"bytes,2,opt,name=signer_pubkey,json=signerPubkey,proto3" json:"signer_pubkey,omitempty"`
	CosignersPubkeys     []string `protobuf:"bytes,3,rep,name=cosigners_pubkeys,json=cosignersPubkeys,proto3" json:"cosigners_pubkeys,omitempty"`
	UnsignedCommitmentTx string   `protobuf:"bytes,4,opt,name=unsigned_commitment_tx,json=unsignedCommitmentTx,proto3" json:"unsigned_commitment_tx,omitempty"`
}

func (x *TreeSigningStartedEvent) Reset() {
	*x = TreeSigningStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeSigningStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeSigningStartedEvent) ProtoMessage() {}

func (x *TreeSigningStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeSigningStartedEvent.ProtoReflect.Descriptor instead.
func (*TreeSigningStartedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{14}
}

func (x *TreeSigningStartedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TreeSigningStartedEvent) GetSignerPubkey() string {
	if x != nil {
		return x.SignerPubkey
	}
	return ""
}

func (x *TreeSigningStartedEvent) GetCosignersPubkeys() []string {
	if x != nil {
		return x.CosignersPubkeys
	}
	return nil
}

func (x *TreeSigningStartedEvent) GetUnsignedCommitmentTx() string {
	if x != nil {
		return x.UnsignedCommitmentTx
	}
	return ""
}

type TreeNoncesAggregatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TreeNonces string `protobuf:"bytes,2,opt,name=tree_nonces,json=treeNonces,proto3" json:"tree_nonces,omitempty"`
}

func (x *TreeNoncesAggregatedEvent) Reset() {
	*x = TreeNoncesAggregatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_new_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNoncesAggregatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNoncesAggregatedEvent) ProtoMessage() {}

func (x *TreeNoncesAggregatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_new_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNoncesAggregatedEvent.ProtoReflect.Descriptor instead.
func (*TreeNoncesAggregatedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_new_types_proto_rawDescGZIP(), []int{15}
}

func (x *TreeNoncesAggregatedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TreeNoncesAggregatedEvent) GetTreeNonces() string {
	if x != nil {
		return x.TreeNonces
	}
	return ""
}

var File_ark_v1_new_types_proto protoreflect.FileDescriptor

var file_ark_v1_new_types_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x22, 0xf6, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6f, 0x72,
	0x66, 0x65, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56,
	0x74, 0x78, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x77, 0x65, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x73, 0x77, 0x65, 0x70, 0x74, 0x22, 0x35, 0x0a, 0x0b, 0x4e, 0x65, 0x77,
	0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74,
	0x22, 0x85, 0x01, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x78,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x92, 0x02, 0x0a, 0x07, 0x4e, 0x65, 0x77,
	0x56, 0x74, 0x78, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x73, 0x77, 0x65, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x53, 0x77, 0x65, 0x70, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x73, 0x70,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x70, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x22, 0x49, 0x0a,
	0x0f, 0x42, 0x69, 0x70, 0x33, 0x32, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x0f, 0x54, 0x78, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0d,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x78, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0a, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x77, 0x65, 0x65, 0x70, 0x54, 0x78, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x08, 0x61, 0x72, 0x6b, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x72, 0x6b, 0x54, 0x78, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x37, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x52, 0x0a, 0x0c, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8e, 0x01,
	0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x66, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x64,
	0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x56, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x72,
	0x65, 0x65, 0x5f, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x06, 0x74, 0x72,
	0x65, 0x65, 0x54, 0x78, 0x22, 0x73, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x72, 0x65, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x78, 0x22, 0x76, 0x0a, 0x16, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x66,
	0x65, 0x69, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x4e, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x69,
	0x64, 0x22, 0x3a, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb1, 0x01,
	0x0a, 0x17, 0x54, 0x72, 0x65, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x73, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x75,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x6e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x78, 0x22, 0x4c, 0x0a, 0x19, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x2a,
	0x5c, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x58, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x58, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x58,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x57, 0x45, 0x45, 0x50, 0x10, 0x03, 0x42, 0x93, 0x01,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x4e, 0x65,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x70,
	0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x72, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41,
	0x58, 0x58, 0xaa, 0x02, 0x06, 0x41, 0x72, 0x6b, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x72,
	0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x41, 0x72, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x41, 0x72, 0x6b, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ark_v1_new_types_proto_rawDescOnce sync.Once
	file_ark_v1_new_types_proto_rawDescData = file_ark_v1_new_types_proto_rawDesc
)

func file_ark_v1_new_types_proto_rawDescGZIP() []byte {
	file_ark_v1_new_types_proto_rawDescOnce.Do(func() {
		file_ark_v1_new_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_ark_v1_new_types_proto_rawDescData)
	})
	return file_ark_v1_new_types_proto_rawDescData
}

var file_ark_v1_new_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ark_v1_new_types_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ark_v1_new_types_proto_goTypes = []interface{}{
	(TxType)(0),                       // 0: ark.v1.TxType
	(*Batch)(nil),                     // 1: ark.v1.Batch
	(*NewOutpoint)(nil),               // 2: ark.v1.NewOutpoint
	(*NodeNew)(nil),                   // 3: ark.v1.NodeNew
	(*NewVtxo)(nil),                   // 4: ark.v1.NewVtxo
	(*Bip322Signature)(nil),           // 5: ark.v1.Bip322Signature
	(*TxHistoryRecord)(nil),           // 6: ark.v1.TxHistoryRecord
	(*PageRequest)(nil),               // 7: ark.v1.PageRequest
	(*PageResponse)(nil),              // 8: ark.v1.PageResponse
	(*BatchStartedEvent)(nil),         // 9: ark.v1.BatchStartedEvent
	(*BatchVtxoTreeEvent)(nil),        // 10: ark.v1.BatchVtxoTreeEvent
	(*BatchConnectorTreeEvent)(nil),   // 11: ark.v1.BatchConnectorTreeEvent
	(*BatchFinalizationEvent)(nil),    // 12: ark.v1.BatchFinalizationEvent
	(*BatchFinalizedEvent)(nil),       // 13: ark.v1.BatchFinalizedEvent
	(*BatchFailedEvent)(nil),          // 14: ark.v1.BatchFailedEvent
	(*TreeSigningStartedEvent)(nil),   // 15: ark.v1.TreeSigningStartedEvent
	(*TreeNoncesAggregatedEvent)(nil), // 16: ark.v1.TreeNoncesAggregatedEvent
}
var file_ark_v1_new_types_proto_depIdxs = []int32{
	2, // 0: ark.v1.NewVtxo.outpoint:type_name -> ark.v1.NewOutpoint
	0, // 1: ark.v1.TxHistoryRecord.type:type_name -> ark.v1.TxType
	3, // 2: ark.v1.BatchVtxoTreeEvent.tree_tx:type_name -> ark.v1.NodeNew
	3, // 3: ark.v1.BatchConnectorTreeEvent.connector_tx:type_name -> ark.v1.NodeNew
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ark_v1_new_types_proto_init() }
func file_ark_v1_new_types_proto_init() {
	if File_ark_v1_new_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ark_v1_new_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOutpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewVtxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bip322Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxHistoryRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchVtxoTreeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchConnectorTreeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchFinalizationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchFinalizedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchFailedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeSigningStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_new_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNoncesAggregatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ark_v1_new_types_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*TxHistoryRecord_BoardingTxid)(nil),
		(*TxHistoryRecord_CommitmentTxid)(nil),
		(*TxHistoryRecord_SweepTxid)(nil),
		(*TxHistoryRecord_ArkTxid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ark_v1_new_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ark_v1_new_types_proto_goTypes,
		DependencyIndexes: file_ark_v1_new_types_proto_depIdxs,
		EnumInfos:         file_ark_v1_new_types_proto_enumTypes,
		MessageInfos:      file_ark_v1_new_types_proto_msgTypes,
	}.Build()
	File_ark_v1_new_types_proto = out.File
	file_ark_v1_new_types_proto_rawDesc = nil
	file_ark_v1_new_types_proto_goTypes = nil
	file_ark_v1_new_types_proto_depIdxs = nil
}
