// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: ark/v1/types.proto

package arkv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoundStage int32

const (
	RoundStage_ROUND_STAGE_UNSPECIFIED  RoundStage = 0
	RoundStage_ROUND_STAGE_REGISTRATION RoundStage = 1
	RoundStage_ROUND_STAGE_FINALIZATION RoundStage = 2
	RoundStage_ROUND_STAGE_FINALIZED    RoundStage = 3
	RoundStage_ROUND_STAGE_FAILED       RoundStage = 4
)

// Enum value maps for RoundStage.
var (
	RoundStage_name = map[int32]string{
		0: "ROUND_STAGE_UNSPECIFIED",
		1: "ROUND_STAGE_REGISTRATION",
		2: "ROUND_STAGE_FINALIZATION",
		3: "ROUND_STAGE_FINALIZED",
		4: "ROUND_STAGE_FAILED",
	}
	RoundStage_value = map[string]int32{
		"ROUND_STAGE_UNSPECIFIED":  0,
		"ROUND_STAGE_REGISTRATION": 1,
		"ROUND_STAGE_FINALIZATION": 2,
		"ROUND_STAGE_FINALIZED":    3,
		"ROUND_STAGE_FAILED":       4,
	}
)

func (x RoundStage) Enum() *RoundStage {
	p := new(RoundStage)
	*p = x
	return p
}

func (x RoundStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoundStage) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_types_proto_enumTypes[0].Descriptor()
}

func (RoundStage) Type() protoreflect.EnumType {
	return &file_ark_v1_types_proto_enumTypes[0]
}

func (x RoundStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoundStage.Descriptor instead.
func (RoundStage) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{0}
}

type Round struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Start      int64      `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End        int64      `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	RoundTx    string     `protobuf:"bytes,4,opt,name=round_tx,json=roundTx,proto3" json:"round_tx,omitempty"`
	VtxoTree   *Tree      `protobuf:"bytes,5,opt,name=vtxo_tree,json=vtxoTree,proto3" json:"vtxo_tree,omitempty"`
	ForfeitTxs []string   `protobuf:"bytes,6,rep,name=forfeit_txs,json=forfeitTxs,proto3" json:"forfeit_txs,omitempty"`
	Connectors []string   `protobuf:"bytes,7,rep,name=connectors,proto3" json:"connectors,omitempty"`
	Stage      RoundStage `protobuf:"varint,8,opt,name=stage,proto3,enum=ark.v1.RoundStage" json:"stage,omitempty"`
}

func (x *Round) Reset() {
	*x = Round{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round) ProtoMessage() {}

func (x *Round) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round.ProtoReflect.Descriptor instead.
func (*Round) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Round) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Round) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Round) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Round) GetRoundTx() string {
	if x != nil {
		return x.RoundTx
	}
	return ""
}

func (x *Round) GetVtxoTree() *Tree {
	if x != nil {
		return x.VtxoTree
	}
	return nil
}

func (x *Round) GetForfeitTxs() []string {
	if x != nil {
		return x.ForfeitTxs
	}
	return nil
}

func (x *Round) GetConnectors() []string {
	if x != nil {
		return x.Connectors
	}
	return nil
}

func (x *Round) GetStage() RoundStage {
	if x != nil {
		return x.Stage
	}
	return RoundStage_ROUND_STAGE_UNSPECIFIED
}

type Outpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
}

func (x *Outpoint) Reset() {
	*x = Outpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Outpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outpoint) ProtoMessage() {}

func (x *Outpoint) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outpoint.ProtoReflect.Descriptor instead.
func (*Outpoint) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Outpoint) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Outpoint) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint *Outpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	// Types that are assignable to TaprootTree:
	//
	//	*Input_Descriptor_
	//	*Input_Tapscripts
	TaprootTree isInput_TaprootTree `protobuf_oneof:"taproot_tree"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Input) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (m *Input) GetTaprootTree() isInput_TaprootTree {
	if m != nil {
		return m.TaprootTree
	}
	return nil
}

func (x *Input) GetDescriptor_() string {
	if x, ok := x.GetTaprootTree().(*Input_Descriptor_); ok {
		return x.Descriptor_
	}
	return ""
}

func (x *Input) GetTapscripts() *Tapscripts {
	if x, ok := x.GetTaprootTree().(*Input_Tapscripts); ok {
		return x.Tapscripts
	}
	return nil
}

type isInput_TaprootTree interface {
	isInput_TaprootTree()
}

type Input_Descriptor_ struct {
	Descriptor_ string `protobuf:"bytes,2,opt,name=descriptor,proto3,oneof"`
}

type Input_Tapscripts struct {
	Tapscripts *Tapscripts `protobuf:"bytes,3,opt,name=tapscripts,proto3,oneof"`
}

func (*Input_Descriptor_) isInput_TaprootTree() {}

func (*Input_Tapscripts) isInput_TaprootTree() {}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // onchain or off-chain
	Amount  uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`  // Amount to send in satoshis.
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *Output) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Output) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Tree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Levels []*TreeLevel `protobuf:"bytes,1,rep,name=levels,proto3" json:"levels,omitempty"`
}

func (x *Tree) Reset() {
	*x = Tree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tree) ProtoMessage() {}

func (x *Tree) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tree.ProtoReflect.Descriptor instead.
func (*Tree) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *Tree) GetLevels() []*TreeLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

type TreeLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *TreeLevel) Reset() {
	*x = TreeLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeLevel) ProtoMessage() {}

func (x *TreeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeLevel.ProtoReflect.Descriptor instead.
func (*TreeLevel) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *TreeLevel) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid       string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Tx         string `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	ParentTxid string `protobuf:"bytes,3,opt,name=parent_txid,json=parentTxid,proto3" json:"parent_txid,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *Node) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Node) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *Node) GetParentTxid() string {
	if x != nil {
		return x.ParentTxid
	}
	return ""
}

type Vtxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint  *Outpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Spent     bool      `protobuf:"varint,2,opt,name=spent,proto3" json:"spent,omitempty"`
	RoundTxid string    `protobuf:"bytes,3,opt,name=round_txid,json=roundTxid,proto3" json:"round_txid,omitempty"`
	SpentBy   string    `protobuf:"bytes,4,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	ExpireAt  int64     `protobuf:"varint,5,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Swept     bool      `protobuf:"varint,6,opt,name=swept,proto3" json:"swept,omitempty"`
	IsPending bool      `protobuf:"varint,7,opt,name=is_pending,json=isPending,proto3" json:"is_pending,omitempty"`
	RedeemTx  string    `protobuf:"bytes,8,opt,name=redeem_tx,json=redeemTx,proto3" json:"redeem_tx,omitempty"`
	Amount    uint64    `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Pubkey    string    `protobuf:"bytes,10,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	CreatedAt int64     `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Vtxo) Reset() {
	*x = Vtxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vtxo) ProtoMessage() {}

func (x *Vtxo) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vtxo.ProtoReflect.Descriptor instead.
func (*Vtxo) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *Vtxo) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *Vtxo) GetSpent() bool {
	if x != nil {
		return x.Spent
	}
	return false
}

func (x *Vtxo) GetRoundTxid() string {
	if x != nil {
		return x.RoundTxid
	}
	return ""
}

func (x *Vtxo) GetSpentBy() string {
	if x != nil {
		return x.SpentBy
	}
	return ""
}

func (x *Vtxo) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *Vtxo) GetSwept() bool {
	if x != nil {
		return x.Swept
	}
	return false
}

func (x *Vtxo) GetIsPending() bool {
	if x != nil {
		return x.IsPending
	}
	return false
}

func (x *Vtxo) GetRedeemTx() string {
	if x != nil {
		return x.RedeemTx
	}
	return ""
}

func (x *Vtxo) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Vtxo) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *Vtxo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type RoundTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid                 string      `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	SpentVtxos           []*Outpoint `protobuf:"bytes,2,rep,name=spent_vtxos,json=spentVtxos,proto3" json:"spent_vtxos,omitempty"`
	SpendableVtxos       []*Vtxo     `protobuf:"bytes,3,rep,name=spendable_vtxos,json=spendableVtxos,proto3" json:"spendable_vtxos,omitempty"`
	ClaimedBoardingUtxos []*Outpoint `protobuf:"bytes,4,rep,name=claimed_boarding_utxos,json=claimedBoardingUtxos,proto3" json:"claimed_boarding_utxos,omitempty"`
}

func (x *RoundTransaction) Reset() {
	*x = RoundTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundTransaction) ProtoMessage() {}

func (x *RoundTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundTransaction.ProtoReflect.Descriptor instead.
func (*RoundTransaction) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{8}
}

func (x *RoundTransaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RoundTransaction) GetSpentVtxos() []*Outpoint {
	if x != nil {
		return x.SpentVtxos
	}
	return nil
}

func (x *RoundTransaction) GetSpendableVtxos() []*Vtxo {
	if x != nil {
		return x.SpendableVtxos
	}
	return nil
}

func (x *RoundTransaction) GetClaimedBoardingUtxos() []*Outpoint {
	if x != nil {
		return x.ClaimedBoardingUtxos
	}
	return nil
}

type RedeemTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid           string      `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	SpentVtxos     []*Outpoint `protobuf:"bytes,2,rep,name=spent_vtxos,json=spentVtxos,proto3" json:"spent_vtxos,omitempty"`
	SpendableVtxos []*Vtxo     `protobuf:"bytes,3,rep,name=spendable_vtxos,json=spendableVtxos,proto3" json:"spendable_vtxos,omitempty"`
}

func (x *RedeemTransaction) Reset() {
	*x = RedeemTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemTransaction) ProtoMessage() {}

func (x *RedeemTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemTransaction.ProtoReflect.Descriptor instead.
func (*RedeemTransaction) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{9}
}

func (x *RedeemTransaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RedeemTransaction) GetSpentVtxos() []*Outpoint {
	if x != nil {
		return x.SpentVtxos
	}
	return nil
}

func (x *RedeemTransaction) GetSpendableVtxos() []*Vtxo {
	if x != nil {
		return x.SpendableVtxos
	}
	return nil
}

// This message is used to prove to the server that the user controls the vtxo without revealing the whole VTXO taproot tree.
type OwnershipProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlBlock string `protobuf:"bytes,1,opt,name=control_block,json=controlBlock,proto3" json:"control_block,omitempty"`
	Script       string `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Signature    string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"` // VTXO outpoint signed with script's secret key
}

func (x *OwnershipProof) Reset() {
	*x = OwnershipProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnershipProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnershipProof) ProtoMessage() {}

func (x *OwnershipProof) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnershipProof.ProtoReflect.Descriptor instead.
func (*OwnershipProof) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{10}
}

func (x *OwnershipProof) GetControlBlock() string {
	if x != nil {
		return x.ControlBlock
	}
	return ""
}

func (x *OwnershipProof) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *OwnershipProof) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SignedVtxoOutpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint *Outpoint       `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Proof    *OwnershipProof `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *SignedVtxoOutpoint) Reset() {
	*x = SignedVtxoOutpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedVtxoOutpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedVtxoOutpoint) ProtoMessage() {}

func (x *SignedVtxoOutpoint) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedVtxoOutpoint.ProtoReflect.Descriptor instead.
func (*SignedVtxoOutpoint) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{11}
}

func (x *SignedVtxoOutpoint) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *SignedVtxoOutpoint) GetProof() *OwnershipProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type Tapscripts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scripts []string `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
}

func (x *Tapscripts) Reset() {
	*x = Tapscripts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tapscripts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tapscripts) ProtoMessage() {}

func (x *Tapscripts) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tapscripts.ProtoReflect.Descriptor instead.
func (*Tapscripts) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{12}
}

func (x *Tapscripts) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

type MarketHour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextStartTime int64 `protobuf:"varint,1,opt,name=next_start_time,json=nextStartTime,proto3" json:"next_start_time,omitempty"`
	NextEndTime   int64 `protobuf:"varint,2,opt,name=next_end_time,json=nextEndTime,proto3" json:"next_end_time,omitempty"`
	Period        int64 `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	RoundInterval int64 `protobuf:"varint,4,opt,name=round_interval,json=roundInterval,proto3" json:"round_interval,omitempty"`
}

func (x *MarketHour) Reset() {
	*x = MarketHour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketHour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketHour) ProtoMessage() {}

func (x *MarketHour) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketHour.ProtoReflect.Descriptor instead.
func (*MarketHour) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{13}
}

func (x *MarketHour) GetNextStartTime() int64 {
	if x != nil {
		return x.NextStartTime
	}
	return 0
}

func (x *MarketHour) GetNextEndTime() int64 {
	if x != nil {
		return x.NextEndTime
	}
	return 0
}

func (x *MarketHour) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *MarketHour) GetRoundInterval() int64 {
	if x != nil {
		return x.RoundInterval
	}
	return 0
}

type SweepableOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid        string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout        uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount      string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ScheduledAt int64  `protobuf:"varint,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
}

func (x *SweepableOutput) Reset() {
	*x = SweepableOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepableOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepableOutput) ProtoMessage() {}

func (x *SweepableOutput) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepableOutput.ProtoReflect.Descriptor instead.
func (*SweepableOutput) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{14}
}

func (x *SweepableOutput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *SweepableOutput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *SweepableOutput) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SweepableOutput) GetScheduledAt() int64 {
	if x != nil {
		return x.ScheduledAt
	}
	return 0
}

type ScheduledSweep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId string             `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	Outputs []*SweepableOutput `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *ScheduledSweep) Reset() {
	*x = ScheduledSweep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledSweep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledSweep) ProtoMessage() {}

func (x *ScheduledSweep) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledSweep.ProtoReflect.Descriptor instead.
func (*ScheduledSweep) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{15}
}

func (x *ScheduledSweep) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *ScheduledSweep) GetOutputs() []*SweepableOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type TxRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           int64           `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Receivers           []*Output       `protobuf:"bytes,3,rep,name=receivers,proto3" json:"receivers,omitempty"`
	Inputs              []*RequestInput `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	BoardingInputs      []*RequestInput `protobuf:"bytes,5,rep,name=boarding_inputs,json=boardingInputs,proto3" json:"boarding_inputs,omitempty"`
	Notes               []string        `protobuf:"bytes,6,rep,name=notes,proto3" json:"notes,omitempty"`
	SigningType         string          `protobuf:"bytes,7,opt,name=signing_type,json=signingType,proto3" json:"signing_type,omitempty"`
	CosignersPublicKeys []string        `protobuf:"bytes,8,rep,name=cosigners_public_keys,json=cosignersPublicKeys,proto3" json:"cosigners_public_keys,omitempty"`
	LastPing            int64           `protobuf:"varint,9,opt,name=last_ping,json=lastPing,proto3" json:"last_ping,omitempty"`
}

func (x *TxRequestInfo) Reset() {
	*x = TxRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequestInfo) ProtoMessage() {}

func (x *TxRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequestInfo.ProtoReflect.Descriptor instead.
func (*TxRequestInfo) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{16}
}

func (x *TxRequestInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TxRequestInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TxRequestInfo) GetReceivers() []*Output {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *TxRequestInfo) GetInputs() []*RequestInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *TxRequestInfo) GetBoardingInputs() []*RequestInput {
	if x != nil {
		return x.BoardingInputs
	}
	return nil
}

func (x *TxRequestInfo) GetNotes() []string {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *TxRequestInfo) GetSigningType() string {
	if x != nil {
		return x.SigningType
	}
	return ""
}

func (x *TxRequestInfo) GetCosignersPublicKeys() []string {
	if x != nil {
		return x.CosignersPublicKeys
	}
	return nil
}

func (x *TxRequestInfo) GetLastPing() int64 {
	if x != nil {
		return x.LastPing
	}
	return 0
}

type RequestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid   string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout   uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *RequestInput) Reset() {
	*x = RequestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInput) ProtoMessage() {}

func (x *RequestInput) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInput.ProtoReflect.Descriptor instead.
func (*RequestInput) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{17}
}

func (x *RequestInput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RequestInput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *RequestInput) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type RoundFinalizationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoundTx         string   `protobuf:"bytes,2,opt,name=round_tx,json=roundTx,proto3" json:"round_tx,omitempty"`
	VtxoTree        *Tree    `protobuf:"bytes,3,opt,name=vtxo_tree,json=vtxoTree,proto3" json:"vtxo_tree,omitempty"`
	Connectors      []string `protobuf:"bytes,4,rep,name=connectors,proto3" json:"connectors,omitempty"`
	MinRelayFeeRate int64    `protobuf:"varint,5,opt,name=min_relay_fee_rate,json=minRelayFeeRate,proto3" json:"min_relay_fee_rate,omitempty"`
}

func (x *RoundFinalizationEvent) Reset() {
	*x = RoundFinalizationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundFinalizationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundFinalizationEvent) ProtoMessage() {}

func (x *RoundFinalizationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundFinalizationEvent.ProtoReflect.Descriptor instead.
func (*RoundFinalizationEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{18}
}

func (x *RoundFinalizationEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundFinalizationEvent) GetRoundTx() string {
	if x != nil {
		return x.RoundTx
	}
	return ""
}

func (x *RoundFinalizationEvent) GetVtxoTree() *Tree {
	if x != nil {
		return x.VtxoTree
	}
	return nil
}

func (x *RoundFinalizationEvent) GetConnectors() []string {
	if x != nil {
		return x.Connectors
	}
	return nil
}

func (x *RoundFinalizationEvent) GetMinRelayFeeRate() int64 {
	if x != nil {
		return x.MinRelayFeeRate
	}
	return 0
}

type RoundFinalizedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoundTxid string `protobuf:"bytes,2,opt,name=round_txid,json=roundTxid,proto3" json:"round_txid,omitempty"`
}

func (x *RoundFinalizedEvent) Reset() {
	*x = RoundFinalizedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundFinalizedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundFinalizedEvent) ProtoMessage() {}

func (x *RoundFinalizedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundFinalizedEvent.ProtoReflect.Descriptor instead.
func (*RoundFinalizedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{19}
}

func (x *RoundFinalizedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundFinalizedEvent) GetRoundTxid() string {
	if x != nil {
		return x.RoundTxid
	}
	return ""
}

type RoundFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RoundFailed) Reset() {
	*x = RoundFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundFailed) ProtoMessage() {}

func (x *RoundFailed) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundFailed.ProtoReflect.Descriptor instead.
func (*RoundFailed) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{20}
}

func (x *RoundFailed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundFailed) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RoundSigningEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CosignersPubkeys []string `protobuf:"bytes,2,rep,name=cosigners_pubkeys,json=cosignersPubkeys,proto3" json:"cosigners_pubkeys,omitempty"`
	UnsignedVtxoTree *Tree    `protobuf:"bytes,3,opt,name=unsigned_vtxo_tree,json=unsignedVtxoTree,proto3" json:"unsigned_vtxo_tree,omitempty"`
	UnsignedRoundTx  string   `protobuf:"bytes,4,opt,name=unsigned_round_tx,json=unsignedRoundTx,proto3" json:"unsigned_round_tx,omitempty"`
}

func (x *RoundSigningEvent) Reset() {
	*x = RoundSigningEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundSigningEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundSigningEvent) ProtoMessage() {}

func (x *RoundSigningEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundSigningEvent.ProtoReflect.Descriptor instead.
func (*RoundSigningEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{21}
}

func (x *RoundSigningEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundSigningEvent) GetCosignersPubkeys() []string {
	if x != nil {
		return x.CosignersPubkeys
	}
	return nil
}

func (x *RoundSigningEvent) GetUnsignedVtxoTree() *Tree {
	if x != nil {
		return x.UnsignedVtxoTree
	}
	return nil
}

func (x *RoundSigningEvent) GetUnsignedRoundTx() string {
	if x != nil {
		return x.UnsignedRoundTx
	}
	return ""
}

type RoundSigningNoncesGeneratedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TreeNonces string `protobuf:"bytes,2,opt,name=tree_nonces,json=treeNonces,proto3" json:"tree_nonces,omitempty"`
}

func (x *RoundSigningNoncesGeneratedEvent) Reset() {
	*x = RoundSigningNoncesGeneratedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundSigningNoncesGeneratedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundSigningNoncesGeneratedEvent) ProtoMessage() {}

func (x *RoundSigningNoncesGeneratedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundSigningNoncesGeneratedEvent.ProtoReflect.Descriptor instead.
func (*RoundSigningNoncesGeneratedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{22}
}

func (x *RoundSigningNoncesGeneratedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundSigningNoncesGeneratedEvent) GetTreeNonces() string {
	if x != nil {
		return x.TreeNonces
	}
	return ""
}

var File_ark_v1_types_proto protoreflect.FileDescriptor

var file_ark_v1_types_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x22, 0xf0, 0x01, 0x0a,
	0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x29, 0x0a, 0x09, 0x76, 0x74, 0x78,
	0x6f, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x76, 0x74, 0x78, 0x6f,
	0x54, 0x72, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x5f,
	0x74, 0x78, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x66, 0x65,
	0x69, 0x74, 0x54, 0x78, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22,
	0x32, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76,
	0x6f, 0x75, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a,
	0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a,
	0x0a, 0x74, 0x61, 0x70, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x70, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x70, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74,
	0x72, 0x65, 0x65, 0x22, 0x3a, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x31, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x09, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x22, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x78, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x69, 0x64,
	0x22, 0xc2, 0x02, 0x0a, 0x04, 0x56, 0x74, 0x78, 0x6f, 0x12, 0x2c, 0x0a, 0x08, 0x6f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x77, 0x65, 0x70, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x77, 0x65, 0x70, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x5f, 0x74, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x31,
	0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x56, 0x74, 0x78, 0x6f,
	0x73, 0x12, 0x35, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76,
	0x74, 0x78, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x74, 0x78, 0x6f, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61,
	0x62, 0x6c, 0x65, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x46, 0x0a, 0x16, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x74, 0x78,
	0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x14, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x74, 0x78, 0x6f, 0x73,
	0x22, 0x91, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x70,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x35, 0x0a,
	0x0f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x74, 0x78, 0x6f, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x56,
	0x74, 0x78, 0x6f, 0x73, 0x22, 0x6b, 0x0a, 0x0e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x70, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x74, 0x78, 0x6f, 0x4f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x22, 0x26, 0x0a, 0x0a, 0x54, 0x61, 0x70, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0a,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x74, 0x0a, 0x0f, 0x53, 0x77, 0x65, 0x65, 0x70, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x0e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x77, 0x65, 0x65, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x77, 0x65, 0x65, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x0d,
	0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0f, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x69, 0x6e,
	0x67, 0x22, 0x4e, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xbb, 0x01, 0x0a, 0x16, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x29, 0x0a, 0x09, 0x76, 0x74, 0x78, 0x6f, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x76, 0x74, 0x78, 0x6f, 0x54, 0x72,
	0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22,
	0x44, 0x0a, 0x13, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x54, 0x78, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb8, 0x01, 0x0a,
	0x11, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x5f,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x12,
	0x3a, 0x0a, 0x12, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x74, 0x78, 0x6f,
	0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x10, 0x75, 0x6e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x56, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x22, 0x53, 0x0a, 0x20, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x72, 0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x2a, 0x98, 0x01, 0x0a,
	0x0a, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x52,
	0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x4f, 0x55, 0x4e,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x42, 0x90, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x72, 0x6b, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x72,
	0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x41, 0x72, 0x6b, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x72, 0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x41, 0x72,
	0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x07, 0x41, 0x72, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ark_v1_types_proto_rawDescOnce sync.Once
	file_ark_v1_types_proto_rawDescData = file_ark_v1_types_proto_rawDesc
)

func file_ark_v1_types_proto_rawDescGZIP() []byte {
	file_ark_v1_types_proto_rawDescOnce.Do(func() {
		file_ark_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_ark_v1_types_proto_rawDescData)
	})
	return file_ark_v1_types_proto_rawDescData
}

var file_ark_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ark_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_ark_v1_types_proto_goTypes = []interface{}{
	(RoundStage)(0),                          // 0: ark.v1.RoundStage
	(*Round)(nil),                            // 1: ark.v1.Round
	(*Outpoint)(nil),                         // 2: ark.v1.Outpoint
	(*Input)(nil),                            // 3: ark.v1.Input
	(*Output)(nil),                           // 4: ark.v1.Output
	(*Tree)(nil),                             // 5: ark.v1.Tree
	(*TreeLevel)(nil),                        // 6: ark.v1.TreeLevel
	(*Node)(nil),                             // 7: ark.v1.Node
	(*Vtxo)(nil),                             // 8: ark.v1.Vtxo
	(*RoundTransaction)(nil),                 // 9: ark.v1.RoundTransaction
	(*RedeemTransaction)(nil),                // 10: ark.v1.RedeemTransaction
	(*OwnershipProof)(nil),                   // 11: ark.v1.OwnershipProof
	(*SignedVtxoOutpoint)(nil),               // 12: ark.v1.SignedVtxoOutpoint
	(*Tapscripts)(nil),                       // 13: ark.v1.Tapscripts
	(*MarketHour)(nil),                       // 14: ark.v1.MarketHour
	(*SweepableOutput)(nil),                  // 15: ark.v1.SweepableOutput
	(*ScheduledSweep)(nil),                   // 16: ark.v1.ScheduledSweep
	(*TxRequestInfo)(nil),                    // 17: ark.v1.TxRequestInfo
	(*RequestInput)(nil),                     // 18: ark.v1.RequestInput
	(*RoundFinalizationEvent)(nil),           // 19: ark.v1.RoundFinalizationEvent
	(*RoundFinalizedEvent)(nil),              // 20: ark.v1.RoundFinalizedEvent
	(*RoundFailed)(nil),                      // 21: ark.v1.RoundFailed
	(*RoundSigningEvent)(nil),                // 22: ark.v1.RoundSigningEvent
	(*RoundSigningNoncesGeneratedEvent)(nil), // 23: ark.v1.RoundSigningNoncesGeneratedEvent
}
var file_ark_v1_types_proto_depIdxs = []int32{
	5,  // 0: ark.v1.Round.vtxo_tree:type_name -> ark.v1.Tree
	0,  // 1: ark.v1.Round.stage:type_name -> ark.v1.RoundStage
	2,  // 2: ark.v1.Input.outpoint:type_name -> ark.v1.Outpoint
	13, // 3: ark.v1.Input.tapscripts:type_name -> ark.v1.Tapscripts
	6,  // 4: ark.v1.Tree.levels:type_name -> ark.v1.TreeLevel
	7,  // 5: ark.v1.TreeLevel.nodes:type_name -> ark.v1.Node
	2,  // 6: ark.v1.Vtxo.outpoint:type_name -> ark.v1.Outpoint
	2,  // 7: ark.v1.RoundTransaction.spent_vtxos:type_name -> ark.v1.Outpoint
	8,  // 8: ark.v1.RoundTransaction.spendable_vtxos:type_name -> ark.v1.Vtxo
	2,  // 9: ark.v1.RoundTransaction.claimed_boarding_utxos:type_name -> ark.v1.Outpoint
	2,  // 10: ark.v1.RedeemTransaction.spent_vtxos:type_name -> ark.v1.Outpoint
	8,  // 11: ark.v1.RedeemTransaction.spendable_vtxos:type_name -> ark.v1.Vtxo
	2,  // 12: ark.v1.SignedVtxoOutpoint.outpoint:type_name -> ark.v1.Outpoint
	11, // 13: ark.v1.SignedVtxoOutpoint.proof:type_name -> ark.v1.OwnershipProof
	15, // 14: ark.v1.ScheduledSweep.outputs:type_name -> ark.v1.SweepableOutput
	4,  // 15: ark.v1.TxRequestInfo.receivers:type_name -> ark.v1.Output
	18, // 16: ark.v1.TxRequestInfo.inputs:type_name -> ark.v1.RequestInput
	18, // 17: ark.v1.TxRequestInfo.boarding_inputs:type_name -> ark.v1.RequestInput
	5,  // 18: ark.v1.RoundFinalizationEvent.vtxo_tree:type_name -> ark.v1.Tree
	5,  // 19: ark.v1.RoundSigningEvent.unsigned_vtxo_tree:type_name -> ark.v1.Tree
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_ark_v1_types_proto_init() }
func file_ark_v1_types_proto_init() {
	if File_ark_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ark_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Round); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Outpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vtxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedeemTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnershipProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedVtxoOutpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tapscripts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketHour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepableOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledSweep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundFinalizationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundFinalizedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundSigningEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundSigningNoncesGeneratedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ark_v1_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Input_Descriptor_)(nil),
		(*Input_Tapscripts)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ark_v1_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ark_v1_types_proto_goTypes,
		DependencyIndexes: file_ark_v1_types_proto_depIdxs,
		EnumInfos:         file_ark_v1_types_proto_enumTypes,
		MessageInfos:      file_ark_v1_types_proto_msgTypes,
	}.Build()
	File_ark_v1_types_proto = out.File
	file_ark_v1_types_proto_rawDesc = nil
	file_ark_v1_types_proto_goTypes = nil
	file_ark_v1_types_proto_depIdxs = nil
}
