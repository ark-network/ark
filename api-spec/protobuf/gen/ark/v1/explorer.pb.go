// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: ark/v1/explorer.proto

package arkv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCommitmentTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *GetCommitmentTxRequest) Reset() {
	*x = GetCommitmentTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitmentTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitmentTxRequest) ProtoMessage() {}

func (x *GetCommitmentTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitmentTxRequest.ProtoReflect.Descriptor instead.
func (*GetCommitmentTxRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{0}
}

func (x *GetCommitmentTxRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetCommitmentTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartedAt int64             `protobuf:"varint,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt   int64             `protobuf:"varint,2,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	Batches   map[uint32]*Batch `protobuf:"bytes,3,rep,name=batches,proto3" json:"batches,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetCommitmentTxResponse) Reset() {
	*x = GetCommitmentTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitmentTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitmentTxResponse) ProtoMessage() {}

func (x *GetCommitmentTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitmentTxResponse.ProtoReflect.Descriptor instead.
func (*GetCommitmentTxResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{1}
}

func (x *GetCommitmentTxResponse) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *GetCommitmentTxResponse) GetBatches() map[uint32]*Batch {
	if x != nil {
		return x.Batches
	}
	return nil
}

type GetVtxoTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchOutpoint *Outpoint    `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	Page          *PageRequest `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetVtxoTreeRequest) Reset() {
	*x = GetVtxoTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVtxoTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeRequest) ProtoMessage() {}

func (x *GetVtxoTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{2}
}

func (x *GetVtxoTreeRequest) GetBatchOutpoint() *Outpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

func (x *GetVtxoTreeRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VtxoTree []*NodeNew    `protobuf:"bytes,1,rep,name=vtxo_tree,json=vtxoTree,proto3" json:"vtxo_tree,omitempty"`
	Page     *PageResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetVtxoTreeResponse) Reset() {
	*x = GetVtxoTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVtxoTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoTreeResponse) ProtoMessage() {}

func (x *GetVtxoTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoTreeResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoTreeResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{3}
}

func (x *GetVtxoTreeResponse) GetVtxoTree() []*NodeNew {
	if x != nil {
		return x.VtxoTree
	}
	return nil
}

func (x *GetVtxoTreeResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetForfeitTxsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchOutpoint *Outpoint    `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	Page          *PageRequest `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetForfeitTxsRequest) Reset() {
	*x = GetForfeitTxsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForfeitTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitTxsRequest) ProtoMessage() {}

func (x *GetForfeitTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitTxsRequest.ProtoReflect.Descriptor instead.
func (*GetForfeitTxsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{4}
}

func (x *GetForfeitTxsRequest) GetBatchOutpoint() *Outpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

func (x *GetForfeitTxsRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetForfeitTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs  []string      `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	Page *PageResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetForfeitTxsResponse) Reset() {
	*x = GetForfeitTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForfeitTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitTxsResponse) ProtoMessage() {}

func (x *GetForfeitTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitTxsResponse.ProtoReflect.Descriptor instead.
func (*GetForfeitTxsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{5}
}

func (x *GetForfeitTxsResponse) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *GetForfeitTxsResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetConnectorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchOutpoint *Outpoint    `protobuf:"bytes,1,opt,name=batch_outpoint,json=batchOutpoint,proto3" json:"batch_outpoint,omitempty"`
	Page          *PageRequest `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetConnectorsRequest) Reset() {
	*x = GetConnectorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorsRequest) ProtoMessage() {}

func (x *GetConnectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorsRequest.ProtoReflect.Descriptor instead.
func (*GetConnectorsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{6}
}

func (x *GetConnectorsRequest) GetBatchOutpoint() *Outpoint {
	if x != nil {
		return x.BatchOutpoint
	}
	return nil
}

func (x *GetConnectorsRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetConnectorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connectors []*NodeNew    `protobuf:"bytes,1,rep,name=connectors,proto3" json:"connectors,omitempty"`
	Page       *PageResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetConnectorsResponse) Reset() {
	*x = GetConnectorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorsResponse) ProtoMessage() {}

func (x *GetConnectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorsResponse.ProtoReflect.Descriptor instead.
func (*GetConnectorsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{7}
}

func (x *GetConnectorsResponse) GetConnectors() []*NodeNew {
	if x != nil {
		return x.Connectors
	}
	return nil
}

func (x *GetConnectorsResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetSpendableVtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Page    *PageRequest `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetSpendableVtxosRequest) Reset() {
	*x = GetSpendableVtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpendableVtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpendableVtxosRequest) ProtoMessage() {}

func (x *GetSpendableVtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpendableVtxosRequest.ProtoReflect.Descriptor instead.
func (*GetSpendableVtxosRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{8}
}

func (x *GetSpendableVtxosRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetSpendableVtxosRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetSpendableVtxosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vtxos []*NewVtxo    `protobuf:"bytes,1,rep,name=vtxos,proto3" json:"vtxos,omitempty"`
	Page  *PageResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetSpendableVtxosResponse) Reset() {
	*x = GetSpendableVtxosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpendableVtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpendableVtxosResponse) ProtoMessage() {}

func (x *GetSpendableVtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpendableVtxosResponse.ProtoReflect.Descriptor instead.
func (*GetSpendableVtxosResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{9}
}

func (x *GetSpendableVtxosResponse) GetVtxos() []*NewVtxo {
	if x != nil {
		return x.Vtxos
	}
	return nil
}

func (x *GetSpendableVtxosResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetTransactionHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StartTime int64        `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64        `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Page      *PageRequest `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetTransactionHistoryRequest) Reset() {
	*x = GetTransactionHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionHistoryRequest) ProtoMessage() {}

func (x *GetTransactionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransactionHistoryRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetTransactionHistoryRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetTransactionHistoryRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetTransactionHistoryRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetTransactionHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History []*TxHistoryRecord `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	Page    *PageResponse      `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetTransactionHistoryResponse) Reset() {
	*x = GetTransactionHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionHistoryResponse) ProtoMessage() {}

func (x *GetTransactionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionHistoryResponse) GetHistory() []*TxHistoryRecord {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *GetTransactionHistoryResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint *Outpoint    `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Page     *PageRequest `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetVtxoChainRequest) Reset() {
	*x = GetVtxoChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVtxoChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoChainRequest) ProtoMessage() {}

func (x *GetVtxoChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoChainRequest.ProtoReflect.Descriptor instead.
func (*GetVtxoChainRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{12}
}

func (x *GetVtxoChainRequest) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *GetVtxoChainRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVtxoChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph map[string]*Transactions `protobuf:"bytes,1,rep,name=graph,proto3" json:"graph,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Page  *PageResponse            `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetVtxoChainResponse) Reset() {
	*x = GetVtxoChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVtxoChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVtxoChainResponse) ProtoMessage() {}

func (x *GetVtxoChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVtxoChainResponse.ProtoReflect.Descriptor instead.
func (*GetVtxoChainResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{13}
}

func (x *GetVtxoChainResponse) GetGraph() map[string]*Transactions {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *GetVtxoChainResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVirtualTxsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txids []string     `protobuf:"bytes,1,rep,name=txids,proto3" json:"txids,omitempty"`
	Page  *PageRequest `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetVirtualTxsRequest) Reset() {
	*x = GetVirtualTxsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualTxsRequest) ProtoMessage() {}

func (x *GetVirtualTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualTxsRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualTxsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{14}
}

func (x *GetVirtualTxsRequest) GetTxids() []string {
	if x != nil {
		return x.Txids
	}
	return nil
}

func (x *GetVirtualTxsRequest) GetPage() *PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetVirtualTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs  []string      `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	Page *PageResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetVirtualTxsResponse) Reset() {
	*x = GetVirtualTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualTxsResponse) ProtoMessage() {}

func (x *GetVirtualTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualTxsResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualTxsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{15}
}

func (x *GetVirtualTxsResponse) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *GetVirtualTxsResponse) GetPage() *PageResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetSweptCommitmentTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *GetSweptCommitmentTxRequest) Reset() {
	*x = GetSweptCommitmentTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSweptCommitmentTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSweptCommitmentTxRequest) ProtoMessage() {}

func (x *GetSweptCommitmentTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSweptCommitmentTxRequest.ProtoReflect.Descriptor instead.
func (*GetSweptCommitmentTxRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{16}
}

func (x *GetSweptCommitmentTxRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetSweptCommitmentTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SweptBy []string `protobuf:"bytes,1,rep,name=swept_by,json=sweptBy,proto3" json:"swept_by,omitempty"`
}

func (x *GetSweptCommitmentTxResponse) Reset() {
	*x = GetSweptCommitmentTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSweptCommitmentTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSweptCommitmentTxResponse) ProtoMessage() {}

func (x *GetSweptCommitmentTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSweptCommitmentTxResponse.ProtoReflect.Descriptor instead.
func (*GetSweptCommitmentTxResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{17}
}

func (x *GetSweptCommitmentTxResponse) GetSweptBy() []string {
	if x != nil {
		return x.SweptBy
	}
	return nil
}

type SubscribeForAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *SubscribeForAddressesRequest) Reset() {
	*x = SubscribeForAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeForAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeForAddressesRequest) ProtoMessage() {}

func (x *SubscribeForAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeForAddressesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeForAddressesRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{18}
}

func (x *SubscribeForAddressesRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type SubscribeForAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	NewVtxos   []*NewVtxo `protobuf:"bytes,2,rep,name=new_vtxos,json=newVtxos,proto3" json:"new_vtxos,omitempty"`
	SpentVtxos []*NewVtxo `protobuf:"bytes,3,rep,name=spent_vtxos,json=spentVtxos,proto3" json:"spent_vtxos,omitempty"`
}

func (x *SubscribeForAddressesResponse) Reset() {
	*x = SubscribeForAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeForAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeForAddressesResponse) ProtoMessage() {}

func (x *SubscribeForAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeForAddressesResponse.ProtoReflect.Descriptor instead.
func (*SubscribeForAddressesResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{19}
}

func (x *SubscribeForAddressesResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SubscribeForAddressesResponse) GetNewVtxos() []*NewVtxo {
	if x != nil {
		return x.NewVtxos
	}
	return nil
}

func (x *SubscribeForAddressesResponse) GetSpentVtxos() []*NewVtxo {
	if x != nil {
		return x.SpentVtxos
	}
	return nil
}

type Transactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []string `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *Transactions) Reset() {
	*x = Transactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_explorer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transactions) ProtoMessage() {}

func (x *Transactions) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_explorer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transactions.ProtoReflect.Descriptor instead.
func (*Transactions) Descriptor() ([]byte, []int) {
	return file_ark_v1_explorer_proto_rawDescGZIP(), []int{20}
}

func (x *Transactions) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

var File_ark_v1_explorer_proto protoreflect.FileDescriptor

var file_ark_v1_explorer_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61,
	0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a,
	0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x49, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x76, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x6d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56,
	0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x09, 0x76, 0x74, 0x78, 0x6f, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4e, 0x65, 0x77, 0x52, 0x08, 0x76, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x66, 0x65, 0x69, 0x74, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x54,
	0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x78,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12, 0x28, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x0e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x72, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x6c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61,
	0x62, 0x6c, 0x65, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x56, 0x74, 0x78, 0x6f,
	0x52, 0x05, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x7c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x6c, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x74, 0x78, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x1a, 0x4e, 0x0a,
	0x0a, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x78, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x69, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12,
	0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x77, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x53, 0x77, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x77, 0x65, 0x70, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x77, 0x65, 0x70, 0x74, 0x42, 0x79, 0x22, 0x3c, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x77, 0x56, 0x74, 0x78, 0x6f, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x12,
	0x30, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x77, 0x56, 0x74, 0x78, 0x6f, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x56, 0x74, 0x78, 0x6f,
	0x73, 0x22, 0x20, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x78, 0x73, 0x32, 0xc6, 0x0a, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x12, 0x1e, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x78, 0x2f, 0x7b, 0x74, 0x78, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x7b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x78, 0x69, 0x64, 0x7d, 0x2f, 0x7b,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76,
	0x6f, 0x75, 0x74, 0x7d, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x54, 0x78, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x54,
	0x78, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x54, 0x78, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42,
	0x12, 0x40, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x7b, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x78, 0x69, 0x64,
	0x7d, 0x2f, 0x7b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x6f, 0x75, 0x74, 0x7d, 0x2f, 0x66, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x54,
	0x78, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x12, 0x40, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x2f, 0x7b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x78, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x6f, 0x75, 0x74, 0x7d,
	0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x75, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x74, 0x78, 0x6f, 0x73,
	0x12, 0x20, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x7d, 0x12, 0x83, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x7b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0x81, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x56, 0x74, 0x78, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76,
	0x31, 0x2f, 0x76, 0x74, 0x78, 0x6f, 0x2f, 0x7b, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x74, 0x78, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x76, 0x6f, 0x75, 0x74, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x6b, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x78, 0x73, 0x12, 0x1c, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54,
	0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54,
	0x78, 0x2f, 0x7b, 0x74, 0x78, 0x69, 0x64, 0x73, 0x7d, 0x12, 0x88, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x77, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x78, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x77, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x2f, 0x7b, 0x74, 0x78, 0x69, 0x64, 0x7d, 0x2f, 0x73,
	0x77, 0x65, 0x70, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x24,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x30, 0x01, 0x42, 0x93, 0x01, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x45, 0x78, 0x70,
	0x6c, 0x6f, 0x72, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x2d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x70, 0x65,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61,
	0x72, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x72, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58,
	0x58, 0xaa, 0x02, 0x06, 0x41, 0x72, 0x6b, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x72, 0x6b,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x41, 0x72, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x41, 0x72, 0x6b, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ark_v1_explorer_proto_rawDescOnce sync.Once
	file_ark_v1_explorer_proto_rawDescData = file_ark_v1_explorer_proto_rawDesc
)

func file_ark_v1_explorer_proto_rawDescGZIP() []byte {
	file_ark_v1_explorer_proto_rawDescOnce.Do(func() {
		file_ark_v1_explorer_proto_rawDescData = protoimpl.X.CompressGZIP(file_ark_v1_explorer_proto_rawDescData)
	})
	return file_ark_v1_explorer_proto_rawDescData
}

var file_ark_v1_explorer_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_ark_v1_explorer_proto_goTypes = []interface{}{
	(*GetCommitmentTxRequest)(nil),        // 0: ark.v1.GetCommitmentTxRequest
	(*GetCommitmentTxResponse)(nil),       // 1: ark.v1.GetCommitmentTxResponse
	(*GetVtxoTreeRequest)(nil),            // 2: ark.v1.GetVtxoTreeRequest
	(*GetVtxoTreeResponse)(nil),           // 3: ark.v1.GetVtxoTreeResponse
	(*GetForfeitTxsRequest)(nil),          // 4: ark.v1.GetForfeitTxsRequest
	(*GetForfeitTxsResponse)(nil),         // 5: ark.v1.GetForfeitTxsResponse
	(*GetConnectorsRequest)(nil),          // 6: ark.v1.GetConnectorsRequest
	(*GetConnectorsResponse)(nil),         // 7: ark.v1.GetConnectorsResponse
	(*GetSpendableVtxosRequest)(nil),      // 8: ark.v1.GetSpendableVtxosRequest
	(*GetSpendableVtxosResponse)(nil),     // 9: ark.v1.GetSpendableVtxosResponse
	(*GetTransactionHistoryRequest)(nil),  // 10: ark.v1.GetTransactionHistoryRequest
	(*GetTransactionHistoryResponse)(nil), // 11: ark.v1.GetTransactionHistoryResponse
	(*GetVtxoChainRequest)(nil),           // 12: ark.v1.GetVtxoChainRequest
	(*GetVtxoChainResponse)(nil),          // 13: ark.v1.GetVtxoChainResponse
	(*GetVirtualTxsRequest)(nil),          // 14: ark.v1.GetVirtualTxsRequest
	(*GetVirtualTxsResponse)(nil),         // 15: ark.v1.GetVirtualTxsResponse
	(*GetSweptCommitmentTxRequest)(nil),   // 16: ark.v1.GetSweptCommitmentTxRequest
	(*GetSweptCommitmentTxResponse)(nil),  // 17: ark.v1.GetSweptCommitmentTxResponse
	(*SubscribeForAddressesRequest)(nil),  // 18: ark.v1.SubscribeForAddressesRequest
	(*SubscribeForAddressesResponse)(nil), // 19: ark.v1.SubscribeForAddressesResponse
	(*Transactions)(nil),                  // 20: ark.v1.Transactions
	nil,                                   // 21: ark.v1.GetCommitmentTxResponse.BatchesEntry
	nil,                                   // 22: ark.v1.GetVtxoChainResponse.GraphEntry
	(*Outpoint)(nil),                      // 23: ark.v1.Outpoint
	(*PageRequest)(nil),                   // 24: ark.v1.PageRequest
	(*NodeNew)(nil),                       // 25: ark.v1.NodeNew
	(*PageResponse)(nil),                  // 26: ark.v1.PageResponse
	(*NewVtxo)(nil),                       // 27: ark.v1.NewVtxo
	(*TxHistoryRecord)(nil),               // 28: ark.v1.TxHistoryRecord
	(*Batch)(nil),                         // 29: ark.v1.Batch
}
var file_ark_v1_explorer_proto_depIdxs = []int32{
	21, // 0: ark.v1.GetCommitmentTxResponse.batches:type_name -> ark.v1.GetCommitmentTxResponse.BatchesEntry
	23, // 1: ark.v1.GetVtxoTreeRequest.batch_outpoint:type_name -> ark.v1.Outpoint
	24, // 2: ark.v1.GetVtxoTreeRequest.page:type_name -> ark.v1.PageRequest
	25, // 3: ark.v1.GetVtxoTreeResponse.vtxo_tree:type_name -> ark.v1.NodeNew
	26, // 4: ark.v1.GetVtxoTreeResponse.page:type_name -> ark.v1.PageResponse
	23, // 5: ark.v1.GetForfeitTxsRequest.batch_outpoint:type_name -> ark.v1.Outpoint
	24, // 6: ark.v1.GetForfeitTxsRequest.page:type_name -> ark.v1.PageRequest
	26, // 7: ark.v1.GetForfeitTxsResponse.page:type_name -> ark.v1.PageResponse
	23, // 8: ark.v1.GetConnectorsRequest.batch_outpoint:type_name -> ark.v1.Outpoint
	24, // 9: ark.v1.GetConnectorsRequest.page:type_name -> ark.v1.PageRequest
	25, // 10: ark.v1.GetConnectorsResponse.connectors:type_name -> ark.v1.NodeNew
	26, // 11: ark.v1.GetConnectorsResponse.page:type_name -> ark.v1.PageResponse
	24, // 12: ark.v1.GetSpendableVtxosRequest.page:type_name -> ark.v1.PageRequest
	27, // 13: ark.v1.GetSpendableVtxosResponse.vtxos:type_name -> ark.v1.NewVtxo
	26, // 14: ark.v1.GetSpendableVtxosResponse.page:type_name -> ark.v1.PageResponse
	24, // 15: ark.v1.GetTransactionHistoryRequest.page:type_name -> ark.v1.PageRequest
	28, // 16: ark.v1.GetTransactionHistoryResponse.history:type_name -> ark.v1.TxHistoryRecord
	26, // 17: ark.v1.GetTransactionHistoryResponse.page:type_name -> ark.v1.PageResponse
	23, // 18: ark.v1.GetVtxoChainRequest.outpoint:type_name -> ark.v1.Outpoint
	24, // 19: ark.v1.GetVtxoChainRequest.page:type_name -> ark.v1.PageRequest
	22, // 20: ark.v1.GetVtxoChainResponse.graph:type_name -> ark.v1.GetVtxoChainResponse.GraphEntry
	26, // 21: ark.v1.GetVtxoChainResponse.page:type_name -> ark.v1.PageResponse
	24, // 22: ark.v1.GetVirtualTxsRequest.page:type_name -> ark.v1.PageRequest
	26, // 23: ark.v1.GetVirtualTxsResponse.page:type_name -> ark.v1.PageResponse
	27, // 24: ark.v1.SubscribeForAddressesResponse.new_vtxos:type_name -> ark.v1.NewVtxo
	27, // 25: ark.v1.SubscribeForAddressesResponse.spent_vtxos:type_name -> ark.v1.NewVtxo
	29, // 26: ark.v1.GetCommitmentTxResponse.BatchesEntry.value:type_name -> ark.v1.Batch
	20, // 27: ark.v1.GetVtxoChainResponse.GraphEntry.value:type_name -> ark.v1.Transactions
	0,  // 28: ark.v1.ExplorerService.GetCommitmentTx:input_type -> ark.v1.GetCommitmentTxRequest
	2,  // 29: ark.v1.ExplorerService.GetVtxoTree:input_type -> ark.v1.GetVtxoTreeRequest
	4,  // 30: ark.v1.ExplorerService.GetForfeitTxs:input_type -> ark.v1.GetForfeitTxsRequest
	6,  // 31: ark.v1.ExplorerService.GetConnectors:input_type -> ark.v1.GetConnectorsRequest
	8,  // 32: ark.v1.ExplorerService.GetSpendableVtxos:input_type -> ark.v1.GetSpendableVtxosRequest
	10, // 33: ark.v1.ExplorerService.GetTransactionHistory:input_type -> ark.v1.GetTransactionHistoryRequest
	12, // 34: ark.v1.ExplorerService.GetVtxoChain:input_type -> ark.v1.GetVtxoChainRequest
	14, // 35: ark.v1.ExplorerService.GetVirtualTxs:input_type -> ark.v1.GetVirtualTxsRequest
	16, // 36: ark.v1.ExplorerService.GetSweptCommitmentTx:input_type -> ark.v1.GetSweptCommitmentTxRequest
	18, // 37: ark.v1.ExplorerService.SubscribeForAddresses:input_type -> ark.v1.SubscribeForAddressesRequest
	1,  // 38: ark.v1.ExplorerService.GetCommitmentTx:output_type -> ark.v1.GetCommitmentTxResponse
	3,  // 39: ark.v1.ExplorerService.GetVtxoTree:output_type -> ark.v1.GetVtxoTreeResponse
	5,  // 40: ark.v1.ExplorerService.GetForfeitTxs:output_type -> ark.v1.GetForfeitTxsResponse
	7,  // 41: ark.v1.ExplorerService.GetConnectors:output_type -> ark.v1.GetConnectorsResponse
	9,  // 42: ark.v1.ExplorerService.GetSpendableVtxos:output_type -> ark.v1.GetSpendableVtxosResponse
	11, // 43: ark.v1.ExplorerService.GetTransactionHistory:output_type -> ark.v1.GetTransactionHistoryResponse
	13, // 44: ark.v1.ExplorerService.GetVtxoChain:output_type -> ark.v1.GetVtxoChainResponse
	15, // 45: ark.v1.ExplorerService.GetVirtualTxs:output_type -> ark.v1.GetVirtualTxsResponse
	17, // 46: ark.v1.ExplorerService.GetSweptCommitmentTx:output_type -> ark.v1.GetSweptCommitmentTxResponse
	19, // 47: ark.v1.ExplorerService.SubscribeForAddresses:output_type -> ark.v1.SubscribeForAddressesResponse
	38, // [38:48] is the sub-list for method output_type
	28, // [28:38] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_ark_v1_explorer_proto_init() }
func file_ark_v1_explorer_proto_init() {
	if File_ark_v1_explorer_proto != nil {
		return
	}
	file_ark_v1_new_types_proto_init()
	file_ark_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ark_v1_explorer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitmentTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitmentTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVtxoTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVtxoTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForfeitTxsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForfeitTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpendableVtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpendableVtxosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVtxoChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVtxoChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualTxsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSweptCommitmentTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSweptCommitmentTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeForAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeForAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_explorer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ark_v1_explorer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ark_v1_explorer_proto_goTypes,
		DependencyIndexes: file_ark_v1_explorer_proto_depIdxs,
		MessageInfos:      file_ark_v1_explorer_proto_msgTypes,
	}.Build()
	File_ark_v1_explorer_proto = out.File
	file_ark_v1_explorer_proto_rawDesc = nil
	file_ark_v1_explorer_proto_goTypes = nil
	file_ark_v1_explorer_proto_depIdxs = nil
}
