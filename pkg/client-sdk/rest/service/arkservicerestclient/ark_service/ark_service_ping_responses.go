// Code generated by go-swagger; DO NOT EDIT.

package ark_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ark-network/ark-sdk/rest/service/models"
)

// ArkServicePingReader is a Reader for the ArkServicePing structure.
type ArkServicePingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArkServicePingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewArkServicePingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewArkServicePingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArkServicePingOK creates a ArkServicePingOK with default headers values
func NewArkServicePingOK() *ArkServicePingOK {
	return &ArkServicePingOK{}
}

/*ArkServicePingOK handles this case with default header values.

A successful response.
*/
type ArkServicePingOK struct {
	Payload *models.V1PingResponse
}

func (o *ArkServicePingOK) Error() string {
	return fmt.Sprintf("[GET /v1/ping/{paymentId}][%d] arkServicePingOK  %+v", 200, o.Payload)
}

func (o *ArkServicePingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1PingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArkServicePingDefault creates a ArkServicePingDefault with default headers values
func NewArkServicePingDefault(code int) *ArkServicePingDefault {
	return &ArkServicePingDefault{
		_statusCode: code,
	}
}

/*ArkServicePingDefault handles this case with default header values.

An unexpected error response.
*/
type ArkServicePingDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the ark service ping default response
func (o *ArkServicePingDefault) Code() int {
	return o._statusCode
}

func (o *ArkServicePingDefault) Error() string {
	return fmt.Sprintf("[GET /v1/ping/{paymentId}][%d] ArkService_Ping default  %+v", o._statusCode, o.Payload)
}

func (o *ArkServicePingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
