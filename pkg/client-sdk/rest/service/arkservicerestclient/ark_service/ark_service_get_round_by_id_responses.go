// Code generated by go-swagger; DO NOT EDIT.

package ark_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ark-network/ark-sdk/rest/service/models"
)

// ArkServiceGetRoundByIDReader is a Reader for the ArkServiceGetRoundByID structure.
type ArkServiceGetRoundByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArkServiceGetRoundByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewArkServiceGetRoundByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewArkServiceGetRoundByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArkServiceGetRoundByIDOK creates a ArkServiceGetRoundByIDOK with default headers values
func NewArkServiceGetRoundByIDOK() *ArkServiceGetRoundByIDOK {
	return &ArkServiceGetRoundByIDOK{}
}

/*ArkServiceGetRoundByIDOK handles this case with default header values.

A successful response.
*/
type ArkServiceGetRoundByIDOK struct {
	Payload *models.V1GetRoundByIDResponse
}

func (o *ArkServiceGetRoundByIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/round/id/{id}][%d] arkServiceGetRoundByIdOK  %+v", 200, o.Payload)
}

func (o *ArkServiceGetRoundByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GetRoundByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArkServiceGetRoundByIDDefault creates a ArkServiceGetRoundByIDDefault with default headers values
func NewArkServiceGetRoundByIDDefault(code int) *ArkServiceGetRoundByIDDefault {
	return &ArkServiceGetRoundByIDDefault{
		_statusCode: code,
	}
}

/*ArkServiceGetRoundByIDDefault handles this case with default header values.

An unexpected error response.
*/
type ArkServiceGetRoundByIDDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the ark service get round by Id default response
func (o *ArkServiceGetRoundByIDDefault) Code() int {
	return o._statusCode
}

func (o *ArkServiceGetRoundByIDDefault) Error() string {
	return fmt.Sprintf("[GET /v1/round/id/{id}][%d] ArkService_GetRoundById default  %+v", o._statusCode, o.Payload)
}

func (o *ArkServiceGetRoundByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
