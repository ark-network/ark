// Code generated by go-swagger; DO NOT EDIT.

package ark_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ark-network/ark/pkg/client-sdk/client/rest/service/models"
)

// ArkServiceRegisterIntentReader is a Reader for the ArkServiceRegisterIntent structure.
type ArkServiceRegisterIntentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArkServiceRegisterIntentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArkServiceRegisterIntentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewArkServiceRegisterIntentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArkServiceRegisterIntentOK creates a ArkServiceRegisterIntentOK with default headers values
func NewArkServiceRegisterIntentOK() *ArkServiceRegisterIntentOK {
	return &ArkServiceRegisterIntentOK{}
}

/*
ArkServiceRegisterIntentOK describes a response with status code 200, with default header values.

A successful response.
*/
type ArkServiceRegisterIntentOK struct {
	Payload *models.V1RegisterIntentResponse
}

// IsSuccess returns true when this ark service register intent o k response has a 2xx status code
func (o *ArkServiceRegisterIntentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ark service register intent o k response has a 3xx status code
func (o *ArkServiceRegisterIntentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ark service register intent o k response has a 4xx status code
func (o *ArkServiceRegisterIntentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this ark service register intent o k response has a 5xx status code
func (o *ArkServiceRegisterIntentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this ark service register intent o k response a status code equal to that given
func (o *ArkServiceRegisterIntentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the ark service register intent o k response
func (o *ArkServiceRegisterIntentOK) Code() int {
	return 200
}

func (o *ArkServiceRegisterIntentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/batch/registerIntent][%d] arkServiceRegisterIntentOK %s", 200, payload)
}

func (o *ArkServiceRegisterIntentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/batch/registerIntent][%d] arkServiceRegisterIntentOK %s", 200, payload)
}

func (o *ArkServiceRegisterIntentOK) GetPayload() *models.V1RegisterIntentResponse {
	return o.Payload
}

func (o *ArkServiceRegisterIntentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1RegisterIntentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArkServiceRegisterIntentDefault creates a ArkServiceRegisterIntentDefault with default headers values
func NewArkServiceRegisterIntentDefault(code int) *ArkServiceRegisterIntentDefault {
	return &ArkServiceRegisterIntentDefault{
		_statusCode: code,
	}
}

/*
ArkServiceRegisterIntentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ArkServiceRegisterIntentDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this ark service register intent default response has a 2xx status code
func (o *ArkServiceRegisterIntentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this ark service register intent default response has a 3xx status code
func (o *ArkServiceRegisterIntentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this ark service register intent default response has a 4xx status code
func (o *ArkServiceRegisterIntentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this ark service register intent default response has a 5xx status code
func (o *ArkServiceRegisterIntentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this ark service register intent default response a status code equal to that given
func (o *ArkServiceRegisterIntentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the ark service register intent default response
func (o *ArkServiceRegisterIntentDefault) Code() int {
	return o._statusCode
}

func (o *ArkServiceRegisterIntentDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/batch/registerIntent][%d] ArkService_RegisterIntent default %s", o._statusCode, payload)
}

func (o *ArkServiceRegisterIntentDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/batch/registerIntent][%d] ArkService_RegisterIntent default %s", o._statusCode, payload)
}

func (o *ArkServiceRegisterIntentDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ArkServiceRegisterIntentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
