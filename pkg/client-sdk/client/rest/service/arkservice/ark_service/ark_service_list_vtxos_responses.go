// Code generated by go-swagger; DO NOT EDIT.

package ark_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ark-network/ark-sdk/client/rest/service/models"
)

// ArkServiceListVtxosReader is a Reader for the ArkServiceListVtxos structure.
type ArkServiceListVtxosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArkServiceListVtxosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArkServiceListVtxosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewArkServiceListVtxosDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArkServiceListVtxosOK creates a ArkServiceListVtxosOK with default headers values
func NewArkServiceListVtxosOK() *ArkServiceListVtxosOK {
	return &ArkServiceListVtxosOK{}
}

/*
ArkServiceListVtxosOK describes a response with status code 200, with default header values.

A successful response.
*/
type ArkServiceListVtxosOK struct {
	Payload *models.V1ListVtxosResponse
}

// IsSuccess returns true when this ark service list vtxos o k response has a 2xx status code
func (o *ArkServiceListVtxosOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ark service list vtxos o k response has a 3xx status code
func (o *ArkServiceListVtxosOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ark service list vtxos o k response has a 4xx status code
func (o *ArkServiceListVtxosOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this ark service list vtxos o k response has a 5xx status code
func (o *ArkServiceListVtxosOK) IsServerError() bool {
	return false
}

// IsCode returns true when this ark service list vtxos o k response a status code equal to that given
func (o *ArkServiceListVtxosOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the ark service list vtxos o k response
func (o *ArkServiceListVtxosOK) Code() int {
	return 200
}

func (o *ArkServiceListVtxosOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vtxos/{address}][%d] arkServiceListVtxosOK %s", 200, payload)
}

func (o *ArkServiceListVtxosOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vtxos/{address}][%d] arkServiceListVtxosOK %s", 200, payload)
}

func (o *ArkServiceListVtxosOK) GetPayload() *models.V1ListVtxosResponse {
	return o.Payload
}

func (o *ArkServiceListVtxosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ListVtxosResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArkServiceListVtxosDefault creates a ArkServiceListVtxosDefault with default headers values
func NewArkServiceListVtxosDefault(code int) *ArkServiceListVtxosDefault {
	return &ArkServiceListVtxosDefault{
		_statusCode: code,
	}
}

/*
ArkServiceListVtxosDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ArkServiceListVtxosDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this ark service list vtxos default response has a 2xx status code
func (o *ArkServiceListVtxosDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this ark service list vtxos default response has a 3xx status code
func (o *ArkServiceListVtxosDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this ark service list vtxos default response has a 4xx status code
func (o *ArkServiceListVtxosDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this ark service list vtxos default response has a 5xx status code
func (o *ArkServiceListVtxosDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this ark service list vtxos default response a status code equal to that given
func (o *ArkServiceListVtxosDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the ark service list vtxos default response
func (o *ArkServiceListVtxosDefault) Code() int {
	return o._statusCode
}

func (o *ArkServiceListVtxosDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vtxos/{address}][%d] ArkService_ListVtxos default %s", o._statusCode, payload)
}

func (o *ArkServiceListVtxosDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vtxos/{address}][%d] ArkService_ListVtxos default %s", o._statusCode, payload)
}

func (o *ArkServiceListVtxosDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ArkServiceListVtxosDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
