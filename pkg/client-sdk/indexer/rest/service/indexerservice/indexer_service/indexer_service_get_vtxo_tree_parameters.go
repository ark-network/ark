// Code generated by go-swagger; DO NOT EDIT.

package indexer_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIndexerServiceGetVtxoTreeParams creates a new IndexerServiceGetVtxoTreeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewIndexerServiceGetVtxoTreeParams() *IndexerServiceGetVtxoTreeParams {
	return &IndexerServiceGetVtxoTreeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewIndexerServiceGetVtxoTreeParamsWithTimeout creates a new IndexerServiceGetVtxoTreeParams object
// with the ability to set a timeout on a request.
func NewIndexerServiceGetVtxoTreeParamsWithTimeout(timeout time.Duration) *IndexerServiceGetVtxoTreeParams {
	return &IndexerServiceGetVtxoTreeParams{
		timeout: timeout,
	}
}

// NewIndexerServiceGetVtxoTreeParamsWithContext creates a new IndexerServiceGetVtxoTreeParams object
// with the ability to set a context for a request.
func NewIndexerServiceGetVtxoTreeParamsWithContext(ctx context.Context) *IndexerServiceGetVtxoTreeParams {
	return &IndexerServiceGetVtxoTreeParams{
		Context: ctx,
	}
}

// NewIndexerServiceGetVtxoTreeParamsWithHTTPClient creates a new IndexerServiceGetVtxoTreeParams object
// with the ability to set a custom HTTPClient for a request.
func NewIndexerServiceGetVtxoTreeParamsWithHTTPClient(client *http.Client) *IndexerServiceGetVtxoTreeParams {
	return &IndexerServiceGetVtxoTreeParams{
		HTTPClient: client,
	}
}

/*
IndexerServiceGetVtxoTreeParams contains all the parameters to send to the API endpoint

	for the indexer service get vtxo tree operation.

	Typically these are written to a http.Request.
*/
type IndexerServiceGetVtxoTreeParams struct {

	// BatchOutpointTxid.
	BatchOutpointTxid string

	// BatchOutpointVout.
	//
	// Format: int64
	BatchOutpointVout int64

	// PageIndex.
	//
	// Format: int32
	PageIndex *int32

	// PageSize.
	//
	// Format: int32
	PageSize *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the indexer service get vtxo tree params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IndexerServiceGetVtxoTreeParams) WithDefaults() *IndexerServiceGetVtxoTreeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the indexer service get vtxo tree params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IndexerServiceGetVtxoTreeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) WithTimeout(timeout time.Duration) *IndexerServiceGetVtxoTreeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) WithContext(ctx context.Context) *IndexerServiceGetVtxoTreeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) WithHTTPClient(client *http.Client) *IndexerServiceGetVtxoTreeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBatchOutpointTxid adds the batchOutpointTxid to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) WithBatchOutpointTxid(batchOutpointTxid string) *IndexerServiceGetVtxoTreeParams {
	o.SetBatchOutpointTxid(batchOutpointTxid)
	return o
}

// SetBatchOutpointTxid adds the batchOutpointTxid to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) SetBatchOutpointTxid(batchOutpointTxid string) {
	o.BatchOutpointTxid = batchOutpointTxid
}

// WithBatchOutpointVout adds the batchOutpointVout to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) WithBatchOutpointVout(batchOutpointVout int64) *IndexerServiceGetVtxoTreeParams {
	o.SetBatchOutpointVout(batchOutpointVout)
	return o
}

// SetBatchOutpointVout adds the batchOutpointVout to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) SetBatchOutpointVout(batchOutpointVout int64) {
	o.BatchOutpointVout = batchOutpointVout
}

// WithPageIndex adds the pageIndex to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) WithPageIndex(pageIndex *int32) *IndexerServiceGetVtxoTreeParams {
	o.SetPageIndex(pageIndex)
	return o
}

// SetPageIndex adds the pageIndex to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) SetPageIndex(pageIndex *int32) {
	o.PageIndex = pageIndex
}

// WithPageSize adds the pageSize to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) WithPageSize(pageSize *int32) *IndexerServiceGetVtxoTreeParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the indexer service get vtxo tree params
func (o *IndexerServiceGetVtxoTreeParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *IndexerServiceGetVtxoTreeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param batchOutpoint.txid
	if err := r.SetPathParam("batchOutpoint.txid", o.BatchOutpointTxid); err != nil {
		return err
	}

	// path param batchOutpoint.vout
	if err := r.SetPathParam("batchOutpoint.vout", swag.FormatInt64(o.BatchOutpointVout)); err != nil {
		return err
	}

	if o.PageIndex != nil {

		// query param page.index
		var qrPageIndex int32

		if o.PageIndex != nil {
			qrPageIndex = *o.PageIndex
		}
		qPageIndex := swag.FormatInt32(qrPageIndex)
		if qPageIndex != "" {

			if err := r.SetQueryParam("page.index", qPageIndex); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param page.size
		var qrPageSize int32

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("page.size", qPageSize); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
